

<style>
    input::-webkit-outer-spin-button, input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        moz-appearance: none;
        margin: 0;
    }


    label {
        display: inline-block;
        min-width: 90px;
    }

    input {
        border: 1px solid #ccc;
        padding: 6px;
        width: 40px;
        -webkit-border-radius: 3px;
    }

        input.ng-invalid.ng-dirty {
            background-color: #f79;
            color: #000;
        }
</style>
<div ng-cloak ng-controller="AppCtrl" ng-app="MyApp">
    <md-toolbar md-scroll-shrink>
        <div class="md-toolbar-tools">Intake Barangay Assembly Record</div>
    </md-toolbar>

    <md-content>


        <md-tabs md-dynamic-height md-border-bottom>


            <md-tab label="Details">
                <form name="praForm">
                    <md-content class="md-padding">
                        <div class="panel panel-info">
                            <div class="panel panel-heading">
                                <h4>Basic Details</h4>
                            </div>
                            @Html.Partial("~/Views/Entry/Common/_rpmb.cshtml")
                            @Html.Partial("~/Views/Entry/Common/_ba_sed.cshtml")
                        </div>
                        
                    </md-content>  
                    
                </form>
            </md-tab>


            <md-tab label="Attendance">
                <form name="attendanceForm">
                    <md-content class="md-padding">
                        <div class="panel panel-info">
                            <div class="panel panel-heading">
                                <h4>Barangay/Community Assembly Attendance Sheet</h4>
                            </div>

                            <md-list-item layout-margin flex="100" class="md-padding">
                                <div flex="25">Attendees</div>
                                <div flex="25">Male</div>
                                <div flex="25">Female</div>
                                <div flex="25">Total</div>
                            </md-list-item>
                            <md-list-item layout-margin flex="100" class="md-padding">
                                <div flex="25">No of. person</div>
                                <div flex="25">
                                    <input name="Male Attendance" required type="number" min="0" ng-pattern="/^[0-9]{1,7}$/" class="form-control" ng-model="data.no_atn_male" placeholder="Male Attendees" />
                                </div>
                                <div flex="25">
                                    <input name="Female Attendance" required type="number" min="0" ng-pattern="/^[0-9]{1,7}$/" class="form-control" ng-model="data.no_atn_female" placeholder="Female Attendees" />
                                </div>
                                <div flex="25"> {{data.no_atn_male + data.no_atn_female}}</div>
                            </md-list-item>
                            <md-list-item layout-margin flex="100" class="md-padding">
                                <div flex="25">No of. IP</div>
                                <div flex="25">
                                    <input placeholder="Male IP" name="Male IP" required type="number" ng-pattern="/^[0-9]{1,7}$/" class="form-control" min="0" ng-max="data.no_atn_male" ng-model="data.no_ip_male" />
                                </div>
                                <div flex="25">
                                    <input placeholder="Female IP" name="Female IP" required type="number" ng-pattern="/^[0-9]{1,7}$/" class="form-control" min="0" ng-max="data.no_atn_female" ng-model="data.no_ip_female" />
                                </div>
                                <div flex="25"> {{data.no_ip_male + data.no_ip_female}}</div>
                            </md-list-item>
                            <md-list-item layout-margin flex="100" class="md-padding">
                                <div flex="25">No of. 60 years +</div>
                                <div flex="25">
                                    <input placeholder="Male Senior" name="Male Senior" required type="number" min="0" ng-pattern="/^[0-9]{1,7}$/" class="form-control" ng-max="data.no_atn_male" ng-model="data.no_old_male" />
                                </div>
                                <div flex="25">
                                    <input placeholder="Female Senior" name="Female Senior" required type="number" min="0" ng-pattern="/^[0-9]{1,7}$/" class="form-control" ng-max="data.no_atn_female" ng-model="data.no_old_female" />
                                </div>
                                <div flex="25"> {{data.no_old_female + data.no_old_male}}</div>
                            </md-list-item>
                            <md-list-item layout-margin flex="100" class="md-padding">
                                <div flex="25">No of. B/LGU</div>
                                <div flex="25">
                                    <input placeholder="Male LGU" name="Male LGU" required class="form-control" type="number" min="0" ng-pattern="/^[0-9]{1,7}$/" ng-max="data.no_atn_male" ng-model="data.no_lgu_male" />
                                </div>
                                <div flex="25">
                                    <input placeholder="Female LGU" name="Female LGU" required class="form-control" type="number" min="0" ng-pattern="/^[0-9]{1,7}$/" ng-max="data.no_atn_female" ng-model="data.no_lgu_female" />
                                </div>
                                <div flex="25"> {{data.no_lgu_female + data.no_lgu_male}}</div>
                            </md-list-item>
                        
                        </div>
                    </md-content>
                </form>
            </md-tab>

            <md-tab label="Household / Family Information">
                <form name="hhForm">
                    <md-content class="md-padding">
                        <div class="panel panel-info">
                            <div class="panel panel-heading">
                                <h4>Household / Family Information</h4>
                            </div>

                            <md-list-item layout-margin flex="100">
                                <div flex="25">Category</div>
                                <div flex="25">Families Represented</div>
                                <div flex="25">Total Families in Barangay</div>
                                <div flex="25">%Families Rep.</div>
                                <div flex="25">Household Represented</div>
                                <div flex="25">Total Household in Barangay</div>
                                <div flex="25">%HHs Rep.</div>
                            </md-list-item>

                            <md-list-item layout-margin flex="100">
                                <div flex="25">
                                    Population (ALL)
                                </div>
                                <div flex="25">
                                    @*<input disabled type="number" ng-pattern="/^[0-9]{1,7}$/" class="form-control" ng-model="data.no_families" placeholder="Rep Families in Barangay" />*@
                                    NA
                                </div>
                                <div flex="25">
                                    @*<input disabled type="number" ng-pattern="/^[0-9]{1,7}$/" class="form-control" ng-model="data.total_families_in_barangay" placeholder="Total Families in Barangay" />*@
                                    NA
                                </div>
                                <div flex="25">
                                    {{100 *(data.total_families_in_barangay == undefined || data.total_families_in_barangay == 0) ? 0 :100 * data.no_families / data.total_families_in_barangay }}
                                </div>
                                <div flex="25">
                                    <input name="Represented Households" ng-app-max="{{ data.total_household_in_barangay }}" required type="number" min="0" ng-pattern="/^[0-9]{1,7}$/" class="form-control" ng-model="data.no_household" placeholder="Rep Households in Barangay" />
                                    <span style="color:red; font-size:small" ng-show="data.no_household > data.total_household_in_barangay"><i>⚠ No. of Household Represented cannot be greater than the Total Household in Barangay (ALL)</i></span>
                                </div>
                                <div flex="25">
                                    <input name="Total Households" required type="number" min="0" ng-pattern="/^[0-9]{1,7}$/" class="form-control" ng-model="data.total_household_in_barangay" placeholder="Total Households in Barangay" />
                                </div>
                                <div flex="25">
                                    {{100 *(data.total_household_in_barangay == undefined || data.total_household_in_barangay == 0) ? 0 :100 * data.no_household / data.total_household_in_barangay }}
                                </div>
                            </md-list-item>
                            <md-divider></md-divider>

                            <md-list-item layout-margin flex="100" class="md-padding">
                                <div flex="25">Pantawid</div>
                                <div flex="25">
                                    <input name="Represented Pantawid Families" ng-app-max="{{ data.no_pantawid_family_in_barangay }}" required type="number" min="0" ng-pattern="/^[0-9]{1,7}$/" class="form-control" ng-model="data.no_pantawid_family" placeholder="Rep Pantawid Family" />
                                    <span style="color:red; font-size:small" ng-show="data.no_pantawid_family > data.no_pantawid_family_in_barangay"><br /><i>⚠ No. of Pantawid Families Represented cannot be greater than the Total Pantawid Families in Barangay</i></span>
                                </div>
                                <div flex="25">
                                    <input name="Total Pantawid Families" required type="number" min="0" ng-pattern="/^[0-9]{1,7}$/" class="form-control" ng-model="data.no_pantawid_family_in_barangay" placeholder="Total Pantawid Family" />
                                </div>
                                <div flex="25">
                                    {{100 *(data.no_pantawid_family_in_barangay == undefined || data.no_pantawid_family_in_barangay == 0) ? 0 :100 * data.no_pantawid_family / data.no_pantawid_family_in_barangay }}
                                </div>
                                <div flex="25">
                                    <input name="Represented Pantawid Households" ng-app-max="{{ data.total_household_pantawid_in_barangay; data.no_household; data.no_pantawid_family }}" required type="number" min="0" ng-pattern="/^[0-9]{1,7}$/" class="form-control" ng-model="data.no_pantawid_household" placeholder="Rep Pantawid Household" />
                                    <span style="color:red; font-size:small" ng-show="data.no_pantawid_household > data.total_household_pantawid_in_barangay"><br /><i>⚠ No. of Pantawid Household Represented cannot be greater than the Total Pantawid Household in Barangay</i></span>
                                    <span style="color:red; font-size:small" ng-show="data.no_pantawid_household > data.no_pantawid_family"><br /><i>⚠ No. of Pantawid Household Represented cannot be greater than the Pantawid Families Represented</i></span>
                                    <span style="color:red; font-size:small" ng-show="data.no_pantawid_household > data.no_household"><br /><i>⚠ No. of Pantawid Household Represented cannot be greater than the Total Household Represented population (ALL)</i></span>
                                </div>
                                <div flex="25">
                                    <input name="Total Pantawid Households" type="number" min="0" ng-pattern="/^[0-9]{1,7}$/" ng-app-max="{{ data.total_household_in_barangay; data.no_pantawid_family_in_barangay }}" class="form-control" ng-model="data.total_household_pantawid_in_barangay" placeholder="Total Pantawid Household in Barangay" />
                                    <span style="color:red; font-size:small" ng-show="data.total_household_pantawid_in_barangay > data.total_household_in_barangay"><br /><i>⚠ No. of Total Pantawid Household cannot be greater than the Total Household in Barangay (ALL)</i></span>
                                    <span style="color:red; font-size:small" ng-show="data.total_household_pantawid_in_barangay > data.no_pantawid_family_in_barangay"><br /><i>⚠ No. of Total Pantawid Household cannot be greater than the Total Pantawid Families in Barangay</i></span>
                                </div>
                                <div flex="25">
                                    {{100 *(data.total_household_pantawid_in_barangay == undefined || data.total_household_pantawid_in_barangay == 0) ? 0 :100 * data.no_pantawid_household / data.total_household_pantawid_in_barangay }}
                                </div>
                            </md-list-item>
                            <md-divider></md-divider>

                            <md-list-item layout-margin flex="100" class="md-padding">
                                <div flex="25">SLP</div>
                                <div flex="25">
                                    <input type="number" min="0" ng-pattern="/^[0-9]{1,7}$/" class="form-control" ng-model="data.no_slp_family" placeholder="Rep SLP Famility" />
                                </div>
                                <div flex="25">
                                    <input disabled type="number" ng-pattern="/^[0-9]{1,7}$/" class="form-control" ng-model="data.no_slp_family_in_barangay" placeholder="Total SLP Famility" />
                                </div>
                                <div flex="25">
                                    {{100 *(data.no_slp_family_in_barangay == undefined || data.no_slp_family_in_barangay == 0) ? 0 :100 * data.no_slp_family / data.no_slp_family_in_barangay }}
                                </div>
                                <div flex="25">
                                    <input type="number" min="0" ng-pattern="/^[0-9]{1,7}$/" ng-app-max="{{ data.no_household; data.no_slp_family }}" class="form-control" ng-model="data.no_slp_household" placeholder="Rep SLP Household" />
                                    <span style="color:red; font-size:small" ng-show="data.no_slp_household > data.no_household"><br /><i>⚠ No. of SLP Household Represented cannot be greater than the Total Household Represented population (ALL)</i></span>
                                    <span style="color:red; font-size:small" ng-show="data.no_slp_household > data.no_slp_family"><br /><i>⚠ No. of SLP Household Represented cannot be greater than the SLP Families Represented</i></span>
                                </div>
                                <div flex="25">
                                    <input disabled type="number" ng-pattern="/^[0-9]{1,7}$/" class="form-control" ng-model="data.total_household_slp_in_barangay" placeholder="Total SLP Household in Barangay" />
                                </div>
                                <div flex="25">
                                    {{100 *(data.total_household_slp_in_barangay == undefined || data.total_household_slp_in_barangay == 0) ? 0 :100 * data.no_slp_household / data.total_household_slp_in_barangay }}
                                </div>
                            </md-list-item>
                            <md-divider></md-divider>

                            <md-list-item layout-margin flex="100" class="md-padding">
                                <div flex="25">IP</div>
                                <div flex="25">
                                    <input name="Represented IP Families" ng-app-max="{{ data.no_ip_family_in_barangay }}" type="number" min="0" ng-pattern="/^[0-9]{1,7}$/" class="form-control" ng-model="data.no_ip_family" placeholder="Rep IP Family" />
                                    <span style="color:red; font-size:small" ng-show="data.no_ip_family > data.no_ip_family_in_barangay"><br /><i>⚠ No. of IP Families Represented cannot be greater than the Total IP Families in Barangay</i></span>
                                </div>
                                <div flex="25">
                                    <input name="Total IP Families" type="number" min="0" ng-pattern="/^[0-9]{1,7}$/" class="form-control" ng-model="data.no_ip_family_in_barangay" placeholder="Total IP Family in Barangay" />
                                </div>
                                <div flex="25">
                                    {{100 *(data.no_ip_family_in_barangay == undefined || data.no_ip_family_in_barangay == 0) ? 0 :100 * data.no_ip_family / data.no_ip_family_in_barangay }}
                                </div>
                                <div flex="25">
                                    <input name="Represented IP Households" ng-app-max="{{data.total_household_ip_in_barangay; data.no_household; data.no_ip_family}}" type="number" min="0" ng-pattern="/^[0-9]{1,7}$/" class="form-control" ng-model="data.no_ip_household" placeholder="Rep IP Household" />
                                    <span style="color:red; font-size:small" ng-show="data.no_ip_household > data.total_household_ip_in_barangay"><br /><i>⚠ No. of IP Household Represented cannot be greater than the Total IP Household in Barangay</i></span>
                                    <span style="color:red; font-size:small" ng-show="data.no_ip_household > data.no_household"><br /><i>⚠ No. of IP Household Represented cannot be greater than the Total Household Represented population (ALL)</i></span>
                                    <span style="color:red; font-size:small" ng-show="data.no_ip_household > data.no_ip_family"><br /><i>⚠ No. of IP Household Represented cannot be greater than the IP Families Represented</i></span>
                                </div>
                                <div flex="25">
                                    <input name="Total IP Households" type="number" min="0" ng-app-max="{{data.total_household_in_barangay; data.no_ip_family_in_barangay}}" ng-pattern="/^[0-9]{1,7}$/" class="form-control" ng-model="data.total_household_ip_in_barangay" placeholder="Total IP Household in Barangay" />
                                    <span style="color:red; font-size:small" ng-show="data.total_household_ip_in_barangay > data.total_household_in_barangay"><br /><i>⚠ No. of Total IP Household cannot be greater than the Total Household in Barangay (ALL)</i></span>
                                    <span style="color:red; font-size:small" ng-show="data.total_household_ip_in_barangay > data.no_ip_family_in_barangay"><br /><i>⚠ No. of Total IP Household cannot be greater than the Total IP Families in Barangay</i></span>
                                </div>
                                <div flex="25">
                                    {{(data.total_household_ip_in_barangay == undefined || data.total_household_ip_in_barangay == 0) ? 0 : 100 * data.no_ip_household / data.total_household_ip_in_barangay }}
                                </div>
                            </md-list-item>

                        </div>
                    </md-content>
                </form>
            </md-tab>

            <md-tab label="Highlights">
                <form name="highlightsForm">
                    <md-content class="md-padding">
                        <div class="panel panel-info">
                            <div class="panel panel-heading">
                                <h4>Highlights</h4>
                            </div>
                            <md-input-container class="md-block" flex="100" style="padding:20px">
                                <textarea placeholder="Place your highlights on this area" name="Highlights" ng-model="data.highlights" md-maxlength="5000" rows="5"
                                          cols="100"
                                          md-select-on-focus="" flex="100"></textarea>
                            </md-input-container>
                        </div>
                    </md-content>
                </form>
            </md-tab>
            
            <md-tab label="Sectors">
                <md-content class="md-padding">
                    @Html.Partial("~/Views/Entry/Person/_sectors.cshtml")
                </md-content>
            </md-tab>

            <md-tab label="Represented IPs" ng-disabled="!status">
                <md-content class="md-padding">
                    @Html.Partial("~/Views/Entry/BrgyAssembly/_indigenous_groups.cshtml")
                </md-content>
            </md-tab>

            <md-tab label="IP Leaders" ng-disabled="!status">
                <md-content class="md-padding">
                    @Html.Partial("~/Views/Entry/BrgyAssembly/ip_leaders.cshtml")
                </md-content>
            </md-tab>

            <md-tab label="PINCOs and Grievances" ng-disabled="!status">
                @*<md-content class="md-padding">
                        <div flex="100" layout="column" layout-margin layout-sm="column">
                            <h3>PINCOS</h3>
                        </div>
                    </md-content>*@
                <md-content class="md-padding">
                    @Html.Partial("~/Views/Entry/Common/_pincos.cshtml")
                </md-content>
            </md-tab>

            @Html.Partial("~/Views/Entry/Common/_attachment.cshtml")

        </md-tabs>

    </md-content>




    <md-content>


        <ul>
            <li ng-repeat="(key, errors) in praForm.$error track by $index">
                <strong>{{ key }}</strong> errors
                <ul>
                    <li ng-repeat="e in errors">{{ e.$name }} has an error: <strong>{{ key }}</strong>.</li>
                </ul>
            </li>
            <li ng-repeat="(key, errors) in attendanceForm.$error track by $index">
                <strong>{{ key }}</strong> Attendance Errors
                <ul>
                    <li ng-repeat="e in errors">{{ e.$name }} has an error: <strong>{{ key }}</strong>.</li>
                </ul>
            </li>
            <li ng-repeat="(key, errors) in hhForm.$error track by $index">
                <strong>{{ key }}</strong> Household Errors
                <ul>
                    <li ng-repeat="e in errors">{{ e.$name }} has an error: <strong>{{ key }}</strong>.</li>
                </ul>
            </li>
            <li ng-repeat="(key, errors) in highlightsForm.$error track by $index">
                <strong>{{ key }}</strong> Household Errors
                <ul>
                    <li ng-repeat="e in errors">{{ e.$name }} has an error: <strong>{{ key }}</strong>.</li>
                </ul>
            </li>


        </ul>


        <md-container layout="row">

            <div flex="100" layout="row" layout-margin layout-sm="column">

                <md-button class="md-primary md-raised" ng-click="save()" ng-disabled="!praForm.$valid || !highlightsForm.$valid || !attendanceForm.$valid || !hhForm.$valid ">
                    Save Record
                </md-button>

                <md-button class="md-warn md-raised" href="/View/BarangayAssembly">
                    Cancel
                </md-button>

            </div>
        </md-container>
    </md-content>

</div>







@section Scripts {
    <script src="~/scripts/directives/ngAppMax.js"></script>
    <script src="~/scripts/directives/numeric-directive.js"></script>
<script src="~/bower_components/BlockUI/jquery.blockUI.js"></script>
    <script>

        angular.module('MyApp', ['ngMaterial', 'ngMessages', 'material.svgAssetsCache', 'app-max', 'purplefox.numeric'])
            .controller('AppCtrl',
                function ($scope, $http, $mdToast) {







                    $scope.data = {};


                    $http.get('/api/offline/v1/barangay_assembly/get?id=@ViewBag.id')
                        .then(function (response) {


                            $scope.check_status = function () {

                                $http.get('/api/exists/barangay_assembly?id=@ViewBag.id')
                                    .then(function (result) {


                                        if (result.data == true) {
                                            $scope.status = true;
                                        } else {
                                            $scope.status = false;

                                        }
                                    });

                            }

                            $scope.check_status();


                            $http.get('/api/offline/v1/barangay_assembly/represented_ip/get?id=@ViewBag.id')
                             .then(function (response) {

                                 $scope.represented_groups = response.data;
                             });










                            $scope.loading = true;

                            $scope.data = response.data;
                            $scope.data.ip_leaders = [];


                            if ($scope.data.ip_leader != null) {
                                $scope.data.ip_leaders = JSON.parse($scope.data.ip_leader);
                            }

                            //$scope.dt_start_date = response.data.date_start == undefined ? null : new Date(response.data.date_start);
                            //$scope.dt_end_date = response.data.date_end == undefined ? null : new Date(response.data.date_end);

                            $scope.dt_start_date = response.data.date_start == undefined ? null : new Date(response.data.date_start);
                            $scope.dt_end_date = response.data.date_end == undefined ? null : new Date(response.data.date_end);


                            $scope.today = new Date();


                            $scope.data.region_code = $scope.data.region_code == 0 ? "" : $scope.data.region_code;
                            $scope.data.prov_code = $scope.data.prov_code == 0 ? "" : $scope.data.prov_code;
                            $scope.data.city_code = $scope.data.city_code == 0 ? "" : $scope.data.city_code;
                            $scope.data.brgy_code = $scope.data.brgy_code == 0 ? "" : $scope.data.brgy_code;



                            $scope.data.fund_source_id = $scope.data.fund_source_id == 0 ? "" : $scope.data.fund_source_id;

                            $scope.data.cycle_id = $scope.data.cycle_id == 0 ? "" : $scope.data.cycle_id;

                            $scope.data.enrollment_id = $scope.data.enrollment_id == 0 ? "" : $scope.data.enrollment_id;

                            $scope.data.barangay_assembly_purpose_id = $scope.data.barangay_assembly_purpose_id == 0 ? "" : $scope.data.barangay_assembly_purpose_id;


                            $scope.maxDate = new Date($scope.dt_start_date);

                            $scope.maxStartDate = new Date("01/01/2014");


                            $scope.$watch('dt_start_date',
                                function (newValue, oldValue) {
                                    $scope.maxDate = new Date(newValue);
                                });



                            $scope.$watch('data.date_start',
                                         function (newValue, oldValue) {


                                             $scope.data.date_intake = $scope.data.date_start;



                                         });


                            $scope.dt_date_intake = new Date(response.data.date_start);

                            //ATTACHMENTS


                            $http.get('/api/attachment_list?id=1')
                            .then(function (response) {

                                $scope.attachment_list = response.data;
                            });


                            $scope.attached_documents = [];
                            $scope.attachment = {};
                            $scope.attachment.mov_list_id = null;

                            $scope.uploadAttachment = function () {

                                if ($scope.attachment.mov_list_id == 52) {
                                    if ($scope.attached_documents.filter(function (e) {
                                    return e.mov_list_id == 52;
                                    }).length > 0) {
                                        alert("Only single attachment is allowed for Barangay Resolution/s.");
                                        $scope.attachment = {};
                                    }
                                    else {
                                        $scope.successful_upload();
                                    }
                                }

                                else {
                                    $scope.successful_upload();
                                }

                                @*var fileUpload = $("#files").get(0);
                                var files = fileUpload.files;
                                var data = new FormData();
                                for (var i = 0; i < files.length ; i++) {
                                    data.append(files[i].name, files[i]);
                                }

                                $.blockUI({ message: '<h1><img src="@Url.Content("~/Images/kc_logo-copy.png")" /></h1> Please wait.....' });


                                $.ajax({
                                    type: "POST",
                                    url: "/Mov/UploadFilesAjax?id="
                                        + '@ViewBag.id'
                                        + "&mov_list_id=" + $scope.attachment.mov_list_id


                                       + "&region_code=" + $scope.data.region_code
                                       + "&prov_code=" + $scope.data.prov_code
                                            + "&city_code=" + $scope.data.city_code
                                            + "&brgy_code=" + $scope.data.brgy_code

                                       + "&fund_source_id=" + $scope.data.fund_source_id
                                            + "&cycle_id=" + $scope.data.cycle_id
                                         + "&enrollment_id=" + $scope.data.enrollment_id,



                                    contentType: false,
                                    processData: false,
                                    data: data,
                                    success: function (message) {
                                        var base = window.location.origin;

                                        message.url = base + "/MOVs/" + message.attached_document_id + ".pdf";

                                        $scope.attached_documents.push(message);

                                        $scope.attachment = {};

                                        setTimeout($.unblockUI, 6);

                                        //    alert(JSON.stringify(message));

                                    },
                                    error: function (message) {
                                        alert(JSON.stringify(message.responseText));
                                    }
                                });*@


                            }

                            $scope.successful_upload = function () {

                                $.blockUI({ message: '<br>Processing...<br><br>' });

                                var fileUpload = $("#files").get(0);
                                var files = fileUpload.files;
                                var data = new FormData();
                                for (var i = 0; i < files.length ; i++) {
                                    data.append(files[i].name, files[i]);
                                }

                                $.ajax({
                                    type: "POST",
                                    url: "/Mov/UploadFilesAjax?id="
                                        + '@ViewBag.id'
                                        + "&mov_list_id=" + $scope.attachment.mov_list_id
                                        + "&region_code=" + $scope.data.region_code
                                        + "&prov_code=" + $scope.data.prov_code
                                        + "&city_code=" + $scope.data.city_code
                                        + "&brgy_code=" + $scope.data.brgy_code
                                        + "&fund_source_id=" + $scope.data.fund_source_id
                                        + "&cycle_id=" + $scope.data.cycle_id
                                        + "&enrollment_id=" + $scope.data.enrollment_id,


                                    contentType: false,
                                    processData: false,
                                    data: data,
                                    success: function (message) {
                                        var base = window.location.origin;

                                        message.url = base + "/MOVs/" + message.attached_document_id + ".pdf";
                                        $scope.attached_documents.push(message);
                                        $scope.attachment = {};
                                        setTimeout($.unblockUI, 3);
                                        angular.element("input[type='file']").val(null);
                                    },
                                    error: function (message) {
                                        alert(JSON.stringify(message.responseText));
                                    }
                                });


                            }



                            $.post('/api/mov/get/uploaded?id=' + '@ViewBag.id')
                               .success(function (value) {


                                   $scope.attached_documents = value;

                                   angular.forEach($scope.attached_documents, function (item) {
                                       var base = window.location.origin;

                                       item.url = base + "/MOVs/" + item.attached_document_id + ".pdf";


                                   })

                               });




                            $scope.deleteMov = function (removeitem) {



                                var ask = confirm("Are you sure you want to Delete attachment? This will also be deleted on the MOVs folder.");


                                if (ask == true) {
                                    $.post('/api/delete/attached_document?id=' + removeitem.attached_document_id).success(function (value) {
                                        $scope.loading = false;



                                        var index = $scope.attached_documents.indexOf(removeitem);
                                        $scope.attached_documents.splice(index, 1);


                                        alert("Record removed!")

                                    }).error(function (data) {

                                        alert(JSON.stringify(data));


                                        $scope.error = "An Error has occured while Deleting! " + data.statusText;
                                        $scope.loading = false;
                                    });

                                }

                            }
                            //END ATTACHMENTS

                            ///PINCOS

                            $scope.addPincos = function () {
                                $scope.add_pincos = !$scope.add_pincos;

                            }

                            $scope.filter = {};
                            $scope.search = function () {


                                $scope.filter.table_name_id = 1;
                                $scope.filter.activity_source_id = '@ViewBag.id';
                                $scope.filter.pageSize = $scope.pageSize == undefined ? '' : $scope.pageSize;
                                $scope.filter.currPage = '';

                                $scope.isSearching = true;


                                $scope.isSearching = true;

                                $.post('/api/offline/v1/grievances/get_dto', $scope.filter)
                                    .success(function (value) {


                                        //$scope.loading = false;


                                        //$scope.TotalUnAuthorized = value.TotalUnAuthorized;
                                        //$scope.TotalSync = value.TotalSync;
                                        //$scope.page = value.Page;
                                        //$scope.pagesCount = value.TotalPages;
                                        //$scope.totalCount = value.TotalCount;
                                        $scope.Items = value.Items;


                                        $scope.isSearching = false;

                                    })
                                    .error(function (data) {

                                        alert(JSON.stringify(data));


                                        $scope.error = "An Error has occured while Saving! " + data.statusText;
                                        $scope.loading = false;
                                    });


                            };


                            $scope.search();


                            $scope.$watch('dt_date_intake',
                                function (newValue, oldValue) {


                                    $scope.maxDate = new Date(newValue);


                                });


                            $scope.$watch('data.is_ip',
                                function (newValue, oldValue) {


                                    if (newValue != true) {
                                        $scope.data.ip_group_id = '';

                                    }


                                });


                            $scope.$watch('data.grs_resolution_status_id',
                                function (newValue, oldValue) {

                                    if (newValue != 1) {

                                        $scope.data.final_resolution = '';
                                        $scope.data.grs_feedback_id = '';


                                        $scope.dt_resolution_date == new Date(newValue);

                                        $scope.data.resolution_date = '';


                                    }
                                    if (newValue == 1) {
                                        $scope.data.resolution_date = $scope.data.end_date;
                                        $scope.data.dt_resolution_date = new Date($scope.data.end_date);

                                    }
                                });


                            $scope.$watch('data.grs_form_id',
                                function (newValue, oldValue) {

                                    if (newValue == 1) {
                                        $scope.data.is_individual = true;
                                        $scope.data.grs_sender_designation_id = 3;
                                        $scope.data.sender_organization = "KALAHI CIDSS";
                                        $scope.data.is_anonynous = false;

                                    }
                                });

                            $scope.$watch('data.is_anonymous',
                                function (newValue, oldValue) {

                                    if (newValue == true) {
                                        $scope.data.sender_organization = '';
                                        $scope.data.sender_name = '';
                                    }
                                });

                            $http.get('/Api/lib_enrollment/')
                                .then(function (response) { $scope.enrollment_id_options = response.data; });


                            $http.get('/Api/lib_lgu_level/')
                                .then(function (response) { $scope.lgu_level_id_options = response.data; });

                            $http.get('/Api/lib_grs_intake_level/')
                                .then(function (response) { $scope.grs_intake_level_id_options = response.data; });

                            $http.get('/Api/lib_grs_form/')
                                .then(function (response) { $scope.grs_form_id_options = response.data; });

                            $http.get('/Api/lib_grs_filling_mode/')
                                .then(function (response) { $scope.grs_filling_mode_id_options = response.data; });

                            $http.get('/Api/lib_grs_resolution_status/')
                                .then(function (response) { $scope.grs_resolution_status_id_options = response.data; });

                            $http.get('/Api/lib_grs_feedback/')
                                .then(function (response) { $scope.grs_feedback_id_options = response.data; });

                            $http.get('/Api/lib_grs_category/')
                                .then(function (response) { $scope.grs_category_id_options = response.data; });

                            $http.get('/Api/lib_grs_complaint_subject/')
                                .then(function (response) { $scope.grs_complaint_subject_id_options = response.data; });

                            $http.get('/Api/lib_grs_nature/')
                                .then(function (response) { $scope.grs_nature_id_options = response.data; });

                            $http.get('/Api/lib_ip_group/')
                                .then(function (response) { $scope.ip_group_id_options = response.data; });

                            $http.get('/Api/lib_sex/')
                                .then(function (response) { $scope.sex_id_options = response.data; });

                            $http.get('/Api/lib_grs_sender_designation/')
                                .then(function (response) { $scope.grs_sender_designation_id_options = response.data; });

                            $http.get('/Api/lib_grs_intake_officer/')
                                .then(function (response) { $scope.grs_intake_officer_id_options = response.data; });

                            $scope.$broadcast('show-errors-check-validity');


                            $scope.save_pincos = function () {
                                $scope.$broadcast('show-errors-check-validity');
                                $scope.loading = true;


                                $scope.data.date_intake = $scope.data.date_start;

                                $scope.data.grs_filling_mode_id = 8;

                                $scope.data.activity_source_id = '@ViewBag.id';

                                if ($scope.data.barangay_assembly_purpose_id == 1) {
                                    $scope.data.training_category_id = 39;
                                }
                                if ($scope.data.barangay_assembly_purpose_id == 2) {
                                    $scope.data.training_category_id = 40;
                                } if ($scope.data.barangay_assembly_purpose_id == 3) {
                                    $scope.data.training_category_id = 41;
                                } if ($scope.data.barangay_assembly_purpose_id == 4) {
                                    $scope.data.training_category_id = 42;
                                } if ($scope.data.barangay_assembly_purpose_id == 5) {
                                    $scope.data.training_category_id = 43;
                                }

                                if ($scope.data.grs_resolution_status_id == 1 && $scope.status == true) {
                                    $scope.data.resolution_date = $scope.data.date_intake;
                                }


                                $.post('/api/offline/v1/grievances/save', $scope.data)
                                    .success(function (data) {
                                        $scope.loading = false;


                                        $scope.Items.push(data);
                                        $scope.add_pincos = !$scope.add_pincos;


                                    })
                                    .error(function (data) {

                                        alert(JSON.stringify(data));


                                        $scope.error = "An Error has occured while Saving! " + data.statusText;
                                        $scope.loading = false;
                                    });
                            };


                            $scope.delete_pincos = function (removeitem) {



                                var ask = confirm("Are you sure you want to Delete this?");


                                if (ask == true) {
                                    $.post('/api/delete/grievance_record?id=' + removeitem.grievance_record_id).success(function (value) {
                                        $scope.loading = false;


                                        var index = $scope.Items.indexOf(removeitem);
                                        $scope.Items.splice(index, 1);


                                        alert("Record removed!")

                                    }).error(function (data) {

                                        alert(JSON.stringify(data));


                                        $scope.error = "An Error has occured while Deleting! " + data.statusText;
                                        $scope.loading = false;
                                    });

                                }

                            }
                            ///END PINCOS

                            $scope.checkIPbirthDate = function () {
                                
                                var today = new Date();
                                var birth_date = new Date($scope.groups.birth_date);

                                var diff = today - birth_date;
                                var age_diff = new Date(diff);
                                var year_diff = Math.abs(age_diff.getUTCFullYear() - 1970);


                                if (year_diff < 15) {
                                    $scope.age_below_15 = true;
                                    alert("Age as of today that is less than 15 years old is not allowed. Please check if this is the correct birth date");
                                } else {
                                    $scope.age_below_15 = false;
                                }


                            }

                            $scope.addIpGroup = function () {
                                $scope.data.ip_leaders.push($scope.groups);
                                $scope.groups = {};
                            }

                            $scope.removeIPGroup = function (index) {

                                $scope.data.ip_leaders.splice(index, 1);


                            }


                            $scope.SaveCoverage = function (member) {


                                var url = '/api/offline/v1/barangay_assembly/post/represented_ip?ip_group_id=' +
                                    member.ip_group_id +
                                    "&id=" +
                                    '@ViewBag.id';


                                $http.post(url)
                                    .success(function (data) {


                                        $mdToast.show(
                                            $mdToast.simple()
                                            .textContent('Represented IP Saved!')
                                            .position("top right")
                                            .hideDelay(3000)
                                        );

                                    })
                                    .error(function (data) {
                                        $scope.error = "An Error has occured while Saving! " + data;
                                        $scope.isAddingPax = false;
                                    });


                            }



                            $http.get('/api/online/lib_region')
                                .then(function (response) { $scope.region_code_options = response.data; });

                            $http.get('/Api/lib_fund_source/')
                                .then(function (response) { $scope.fund_source_id_options = response.data; });


                            $http.get('/Api/lib_barangay_assembly_purpose/')
                                .then(function (response) {
                                    $scope.barangay_assembly_purpose_id_options = response.data;
                                });


                            $scope.loading = false;

                            $scope.edit = function () {
                                this.editMode = !this.editMode;
                            };


                            $scope.cancel = function () {
                                window.location.href = "/View/BarangayAssembly";
                            }


                            $scope.save = function () {
                                $scope.$broadcast('show-errors-check-validity');
                                $scope.loading = true;
                                //       alert(JSON.stringify($scope.data));

                                //'/api/v1/grievances/save'

                                $scope.data.ip_leader = JSON.stringify($scope.data.ip_leaders);

                                $.post('/api/offline/v1/barangay_assembly/save', $scope.data)
                                    .success(function (data) {
                                        $scope.loading = false;

                                        $mdToast.show(
                                            $mdToast.simple()
                                            .textContent('Record Saved!')
                                            .position("top right")
                                            .hideDelay(3000)
                                        );

                                        $scope.check_status();

                                    })
                                    .error(function (data) {
                                        alert(JSON.stringify(data));





                                        $scope.error = "An Error has occured while Saving! " + data.statusText;
                                        $scope.loading = false;
                                    });
                            };
                        });


                    $scope.$watch('data.region_code',
                        function (newValue, oldValue) {


                            var record = $scope;

                            if (newValue == null) {
                                record.prov_code = '';
                                record.city_code = '';
                                record.brgy_code = '';


                                record.prov_code_options = [];
                                record.city_code_options = [];
                                record.brgy_code_options = [];
                            } else {

                                $http({
                                    method: 'GET',
                                    url: '/api/online/lib_province?id=' + newValue,

                                })
                                    .success(function (data, status, headers, config) {

                                        $scope.prov_code_options = data;
                                    })
                                    .error(function (data, status, headers, config) {

                                        $scope.message = 'Unexpected Error';
                                    });
                            }

                        });

                    $scope.$watch('data.prov_code',
                        function (newValue, oldValue) {

                            var record = $scope;

                            if (newValue == null) {

                                record.brgy_code = '';
                                record.city_code = '';
                                record.city_code_options = [];
                                record.brgy_code_options = [];
                            } else {
                                $http({
                                    method: 'GET',
                                    url: '/api/online/lib_city?id=' + newValue,

                                })
                                    .success(function (data, status, headers, config) {

                                        $scope.city_code_options = data;
                                    })
                                    .error(function (data, status, headers, config) {

                                        $scope.message = 'Unexpected Error';
                                    });
                            }

                        });


                    $scope.$watch('data.city_code',
                        function (newValue, oldValue) {

                            var record = $scope;

                            if (newValue == null) {

                                record.brgy_code = '';

                                record.brgy_code_options = [];
                            } else {
                                $http({
                                    method: 'GET',
                                    url: '/api/online/lib_brgy?id=' + newValue,

                                })
                                    .success(function (data, status, headers, config) {

                                        $scope.brgy_code_options = data;
                                    })
                                    .error(function (data, status, headers, config) {

                                        $scope.message = 'Unexpected Error';
                                    });
                            }

                        });

                    $scope.$watch('data.fund_source_id',
                        function (newValue, oldValue) {

                            var record = $scope;

                            if (newValue == null) {

                                record.cycle_id = null;

                                record.cycle_id_options = [];
                            } else {

                                if (newValue != 7) {

                                    record.enrollment_id = 2;
                                }

                                $http({
                                    method: 'GET',
                                    url: '/api/lib_cycle?id=' + newValue,

                                })
                                    .success(function (data, status, headers, config) {

                                        $scope.cycle_id_options = data;
                                    })
                                    .error(function (data, status, headers, config) {

                                        $scope.message = 'Unexpected Error';
                                    });
                            }

                        });


                })


            .directive('showErrors',
                function ($timeout, showErrorsConfig) {
                    var getShowSuccess, linkFn;
                    getShowSuccess = function (options) {
                        var showSuccess;
                        showSuccess = showErrorsConfig.showSuccess;
                        if (options && options.showSuccess != null) {
                            showSuccess = options.showSuccess;
                        }
                        return showSuccess;
                    };
                    linkFn = function (scope, el, attrs, formCtrl) {
                        var blurred, inputEl, inputName, inputNgEl, options, showSuccess, toggleClasses;
                        blurred = false;
                        options = scope.$eval(attrs.showErrors);
                        showSuccess = getShowSuccess(options);
                        inputEl = el[0].querySelector('[name]');
                        inputNgEl = angular.element(inputEl);
                        inputName = inputNgEl.attr('name');
                        if (!inputName) {
                            throw 'show-errors element has no child input elements with a \'name\' attribute';
                        }
                        inputNgEl.bind('blur',
                            function () {
                                blurred = true;
                                return toggleClasses(formCtrl[inputName].$invalid);
                            });
                        scope.$watch(function () {
                            return formCtrl[inputName] && formCtrl[inputName].$invalid;
                        },
                            function (invalid) {
                                if (!blurred) {
                                    return;
                                }
                                return toggleClasses(invalid);
                            });
                        scope.$on('show-errors-check-validity',
                            function () {
                                return toggleClasses(formCtrl[inputName].$invalid);
                            });
                        scope.$on('show-errors-reset',
                            function () {
                                return $timeout(function () {
                                    el.removeClass('has-error');
                                    el.removeClass('has-success');
                                    return blurred = false;
                                },
                                    0,
                                    false);
                            });
                        return toggleClasses = function (invalid) {
                            el.toggleClass('has-error', invalid);
                            if (showSuccess) {
                                return el.toggleClass('has-success', !invalid);
                            }
                        };
                    };
                    return {
                        restrict: 'A',
                        require: '^form',
                        compile: function (elem, attrs) {
                            if (!elem.hasClass('form-group')) {
                                throw 'show-errors element does not have the \'form-group\' class';
                            }
                            return linkFn;
                        }
                    };
                }
            )
            .provider('showErrorsConfig',
                function () {
                    var _showSuccess;
                    _showSuccess = false;
                    this.showSuccess = function (showSuccess) {
                        return _showSuccess = showSuccess;
                    };
                    this.$get = function () {
                        return { showSuccess: _showSuccess };
                    };
                });



        /**
        Copyright 2016 Google Inc. All Rights Reserved.
        Use of this source code is governed by an MIT-style license that can be in foundin the LICENSE file at http://material.angularjs.org/license.
        **/

    </script>

}

