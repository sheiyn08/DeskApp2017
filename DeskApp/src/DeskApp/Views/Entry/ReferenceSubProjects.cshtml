

<style>
    #portfolio {
        width: 100%;
        max-width: 600px;
        margin: 2em auto;
    }

    #portfolio-sort {
        text-align: center;
        padding-bottom: 3px;
        border-bottom: 1px solid #999;
        margin-bottom: 1em;
    }

        #portfolio-sort a {
            color: #fff;
            background: #a00;
            display: inline-block;
            padding: 3px 9px;
            text-decoration: none;
            margin-right: 1em;
        }

    #portfolio-content {
        overflow: hidden;
    }

    div.portfolio-item {
        float: left;
        margin: 0 3% 1em 0;
        width: 29%;
        height: 10em;
        line-height: 10;
        text-align: center;
    }

    div[data-cat="a"] {
        background: #ccc;
    }

    div[data-cat="b"] {
        background: #666;
        color: #fff;
    }

    div[data-cat="c"] {
        background: #333;
        color: #fff;
    }
</style>

<style>
    input::-webkit-outer-spin-button, input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        moz-appearance: none;
        margin: 0;
    }


    label {
        display: inline-block;
        min-width: 90px;
    }

    input {
        border: 1px solid #ccc;
        padding: 6px;
        width: 40px;
        -webkit-border-radius: 3px;
    }

        input.ng-invalid {
            background-color: #f79;
            color: #000;
        }
</style>


<div ng-cloak ng-controller="AppCtrl" ng-app="MyApp">
    <md-toolbar md-scroll-shrink>
        <div class="md-toolbar-tools">Reference List > View Sub Project Details</div>
    </md-toolbar>

    <md-dialog-content>
        <div class="panel panel-info">
            <div class="panel-body">
                <div class="panel panel-warning">
                    <div class="panel-heading">
                        <h5>If you wish to connect this Sub Project with your encoded SP, copy and paste the Geotagging SPID on the encoded SP to update basic details.</h5>
                    </div>
                </div>

                @*------------------------------------------------- Basic Information -----------------------------------------------------*@
                <div class="panel-body">
                    <h4 style="color:dodgerblue">Basic Information</h4>
                    <md-divider></md-divider>
                    <md-divider></md-divider>
                    <md-divider></md-divider>

                    <div class="row">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>Geotagging SP ID</label>
                            </div>
                            <div class="col-md-6">
                                <input ng-model="data.sub_project_id" disabled class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="row" ng-show="data.modality_id == 7">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>e-RFR Sub Project ID</label>
                            </div>
                            <div class="col-md-6">
                                <input ng-model="data.erfr_project_id" disabled class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>Sub Project Name</label>
                            </div>
                            <div class="col-md-6">
                                <input ng-model="data.sub_project_name" disabled class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>Project type</label>
                            </div>
                            <div class="col-md-6">
                                <select name="project_type_id" ng-model="data.project_type_id" class="form-control" ng-disabled="true"
                                        ng-options="option.Id as option.Name for option in project_type_id_options">
                                    <option value="">[Select Project Type]</option>
                                </select>
                                @*<select ng-model="data.lib_project_type.name" class="form-control" disabled>
                            <option value="">[Select Project Type]</option>
                        </select>*@
                            </div>
                        </div>
                    </div>
                    <div class="row" ng-show="data.project_type_id == 23 && data.modality_id ==7">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>Public School for IP (Lumad)?</label>
                            </div>
                            <div class="col-md-6">
                                <md-checkbox ng-model="data.is_public_school_for_ip" aria-label="Checkbox 1" class="md-primary" disabled>
                                    {{data.is_public_school_for_ip == true ? "YES" : ""}}
                                </md-checkbox>
                            </div>
                        </div>
                    </div>
                    <div class="row" ng-show="data.project_type_id == 36 && data.modality_id == 11">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>Training type</label>
                            </div>
                            <div class="col-md-6">
                                <select ng-model="data.lib_training_category.name" class="form-control" disabled>
                                    <option value="">[Select Training Type]</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>Project</label>
                            </div>
                            <div class="col-md-6">
                                <select name="modality_id" ng-model="data.modality_id" class="form-control" ng-disabled="true"
                                        ng-options="option.Id as option.Name for option in fund_source_id_options">
                                    <option value="">[Select Modality]</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row" ng-show="data.modality_id == 7">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>Fund Source</label>
                            </div>
                            <div class="col-md-6">
                                <select name="fund_source_id" ng-model="data.fund_source_id" class="form-control" ng-disabled="true"
                                        ng-options="option.Id as option.Name for option in _fund_source_id_options">
                                    <option value="">[Select Fund Source]</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>Cycle</label>
                            </div>
                            <div class="col-md-6">
                                <select name="cycle_id" ng-model="data.cycle_id" class="form-control" ng-disabled="true"
                                        ng-options="option.Id as option.Name for option in cycle_id_options">
                                    <option value="">[Select Cycle]</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row" ng-show="data.modality_id == 7 || data.modality_id == 14">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>Purely LCC? (No KC Grant Amount)</label>
                            </div>
                            <div class="col-md-6">
                                <md-checkbox ng-model="data.is_lcc" aria-label="Checkbox 1" class="md-primary" disabled>
                                    {{data.is_lcc == true ? "YES" : ""}}
                                </md-checkbox>
                            </div>
                        </div>
                    </div>
                    <div class="row" ng-show="data.modality_id == 7 || data.modality_id == 14">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>Incentives (Tier-2)?</label>
                            </div>
                            <div class="col-md-6">
                                <md-checkbox ng-model="data.is_incentive" aria-label="Checkbox 1" class="md-primary" disabled>
                                    {{data.is_incentive == true ? "YES" : ""}}
                                </md-checkbox>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>From Savings?</label>
                            </div>
                            <div class="col-md-6">
                                <md-checkbox ng-model="data.is_savings" aria-label="Checkbox 1" class="md-primary" disabled>
                                    {{data.is_savings == true ? "YES" : ""}}
                                </md-checkbox>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>LGU-led?</label>
                            </div>
                            <div class="col-md-6">
                                <md-checkbox ng-model="data.is_lgu_led" aria-label="Checkbox 1" class="md-primary" disabled>
                                    {{data.is_lgu_led == true ? "YES" : ""}}
                                </md-checkbox>
                            </div>
                        </div>
                    </div>
                    <div class="row" ng-show="data.modality_id == 7 || data.modality_id == 14">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>Mode</label>
                            </div>
                            <div class="col-md-6">
                                <select name="mode_id" ng-model="data.mode_id" class="form-control" ng-disabled="true"
                                        ng-options="option.Id as option.Name for option in mode_id_options">
                                    <option value="">[Select Mode]</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    @*<div class="row" ng-hide="data.modality_id == 7 || data.modality_id == 14">
                <br />
                <div class="col-md-12">
                    <div class="col-md-6">
                        <label>Mode</label>
                    </div>
                    <div class="col-md-6">
                        {{data.mode_id}}
                    </div>
                </div>
            </div>*@
                    @*<div class="row" ng-show="data.modality_id == 7">
                <br />
                <div class="col-md-12">
                    <div class="col-md-6">
                        <label>NCDDP Grouping</label>
                    </div>
                    <div class="col-md-6">
                        <select ng-model="data.modality_category_id" class="form-control" disabled>
                            <option value="">[Select Grouping]</option>
                        </select>
                    </div>
                </div>
            </div>*@
                    <div class="row">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>Region</label>
                            </div>
                            <div class="col-md-6">
                                <select name="region_code" ng-model="data.region_code" id="region_code" class="form-control" ng-disabled="true"
                                        ng-options="option.Id as option.Name for option in region_code_options">
                                    <option value="">[Select Region]</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>Province</label>
                            </div>
                            <div class="col-md-6">
                                <select name="prov_code" ng-model="data.prov_code" id="prov_code" class="form-control"
                                        ng-disabled="true"
                                        ng-options="option.Id as option.Name for option in prov_code_options">
                                    <option value="">[Select Province]</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>Municipality</label>
                            </div>
                            <div class="col-md-6">
                                <select ng-model="data.lib_city.city_name" class="form-control" disabled>
                                    <option value="">[Select Municipality]</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>Barangay</label>
                            </div>
                            <div class="col-md-6">
                                <select ng-model="data.lib_brgy.brgy_name" class="form-control" disabled>
                                    <option value="">[Select Barangay]</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>Other Covered Barangays</label>
                            </div>
                            <div class="col-md-6">
                                Other Covererd Barangays here
                            </div>
                        </div>
                    </div>
                </div>

                @*------------------------------------------------- Financial Information -----------------------------------------------------*@
                <div class="panel-body">
                    <h4 style="color:dodgerblue">Financial Information</h4>
                    <md-divider></md-divider>
                    <md-divider></md-divider>
                    <md-divider></md-divider>

                    <div class="row" ng-show="data.modality_id == 12">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>DepEd Grant Amount</label>
                            </div>
                            <div class="col-md-6">
                                <input ng-model="data._dep_ed_amount" disabled class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="row" ng-show="data.modality_id == 7 && data.project_type_id == 23 && data.is_public_school_for_ip == true">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>With DepEd Grant?</label>
                            </div>
                            <div class="col-md-6">
                                <md-checkbox ng-model="data.is_deped_funded" aria-label="Checkbox 1" class="md-primary" disabled>
                                    {{data.is_deped_funded == true ? "YES" : ""}}
                                </md-checkbox>
                            </div>
                        </div>
                    </div>
                    <div class="row" ng-show="data.is_deped_funded == true">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>DepEd Grant Amount</label>
                            </div>
                            <div class="col-md-6">
                                <input ng-model="data._dep_ed_amount" disabled class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="row" ng-show="data.modality_id != 12">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>Kalahi Target Amount</label>
                            </div>
                            <div class="col-md-6">
                                <input ng-model="data.Kalahi_Amount" disabled class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="row" ng-show="data.modality_id != 12">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>Kalahi Actual Amount: (SUM of Tranche Releases, from BTF)</label>
                            </div>
                            <div class="col-md-6">
                                {{totalAllBTF('amount_approved') |  currency:"₽"}}
                            </div>
                        </div>
                    </div>
                    <div class="row" ng-show="data.is_lcc != true">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>With Local Counterpart (Financial)?</label>
                            </div>
                            <div class="col-md-6">
                                <md-checkbox ng-model="data.has_local_counterpart" aria-label="Checkbox 1" class="md-primary" disabled>
                                    {{data.has_local_counterpart == true ? "YES" : ""}}
                                </md-checkbox>
                            </div>
                        </div>
                    </div>
                    <div class="row" ng-show="data.is_lcc == true">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>With Local Counterpart (Financial)?</label>
                            </div>
                            <div class="col-md-6">
                                <md-checkbox ng-model="data.is_lcc" aria-label="Checkbox 1" class="md-primary">
                                    {{data.is_lcc == true ? "YES" : ""}}
                                </md-checkbox>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>LCC Target Amount</label>
                            </div>
                            <div class="col-md-6">
                                <input ng-model="data.LCC_Amount" disabled class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>LCC Actual Amount</label>
                            </div>
                            <div class="col-md-6">
                                <input ng-model="data.LCC_Adj" disabled class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>Operation and Maintainance Cost</label>
                            </div>
                            <div class="col-md-6">
                                <input ng-model="data.operation_maintainance_cost" disabled class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <br />
                        <div class="col-md-12" ng-show="data.modality_id == 7 || data.modality_id == 14">
                            <div class="col-md-6">
                                <label>Multiple SPs in one (1) RFR</label>
                            </div>
                            <div class="col-md-6">
                                <md-checkbox ng-model="data.is_multiple_sps" aria-label="Checkbox 1" class="md-primary" disabled>
                                    {{data.is_multiple_sps == true ? "YES" : ""}}
                                </md-checkbox>
                            </div>
                        </div>
                    </div>
                    <div class="row" ng-show="data.is_multiple_sps == true">
                        <div class="col-md-12">
                            <div class="col-md-3">
                                <label class="text-info">*Individual Sub Project Cost</label>
                            </div>
                        </div>
                    </div>
                    <div class="row" ng-show="data.is_multiple_sps == true">
                        <div class="col-md-1">
                        </div>
                        <div class="col-md-9">
                            <table name="myMSPTable" class="table">
                                <thead>
                                    <tr>
                                        <th>KALAHI Target Amount</th>
                                        <th>KALAHI Actual Amount</th>
                                        <th>LCC Target Amount</th>
                                        <th>LCC Actual Amount</th>
                                        <th>Operation and Mainternance Cost</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr ng-repeat="item in spi_multiple_sp">
                                        <td>
                                            <span ng-show="item.is_active">{{item.kalahi_target_amount | currency:"₽"}}</span>
                                        </td>
                                        <td>
                                            <span ng-show="item.is_active">{{item.kalahi_actual_amount | currency:"₽"}}</span>
                                        </td>
                                        <td>
                                            <span ng-show="item.is_active">{{item.lcc_target_amount | currency:"₽"}}</span>
                                        </td>
                                        <td>
                                            <span ng-show="item.is_active">{{item.lcc_actual_amount | currency:"₽"}}</span>
                                        </td>
                                        <td>
                                            <span ng-show="item.is_active">{{item.operation_and_maintenance_cost | currency:"₽"}}</span>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                @*------------------------------------------------- Tranche Release (BTF) -----------------------------------------------------*@
                <div class="panel-body" ng-show="data.modality_id == 7 && data.erfr_project_id != '' || data.modality_id == 14 && data.erfr_project_id != ''">
                    <h4 style="color:dodgerblue">Tranche Releases (BTF data)</h4>
                    <md-divider></md-divider>
                    <md-divider></md-divider>
                    <md-divider></md-divider>

                    <div class="row">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label>Target Tranching</label>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="col-md-1">
                            </div>
                            <div class="col-md-11">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>First Tranche</th>
                                            <th>Second Tranche</th>
                                            <th>Third Tranche</th>
                                            <th>Target Tranching</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>
                                                {{data.target_tranching_first}}
                                            </td>
                                            <td>
                                                {{data.target_tranching_second}}
                                            </td>
                                            <td>
                                                {{data.target_tranching_third}}
                                            </td>
                                            <td>
                                                <label>{{data.target_tranching_first + data.target_tranching_second + data.target_tranching_third}}%</label>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                @*------------------------------------------------- Physical Progress Information -----------------------------------------------------*@
                <div class="panel-body">
                    <h4 style="color:dodgerblue">Physical Progress Information</h4>
                    <md-divider></md-divider>
                    <md-divider></md-divider>
                    <md-divider></md-divider>

                    <div class="row">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label class="text-info">Original POW</label>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="col-md-1">
                            </div>
                            <div class="col-md-5">
                                <label>Physical Status (as per Original POW)</label>
                            </div>
                            <div class="col-md-6">
                                <select ng-model="data.physical_status_id" class="form-control" disabled>
                                    <option value="">[Select Physical Status]</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row" ng-show="data.physical_status_id == 5">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-1">
                            </div>
                            <div class="col-md-5">
                                <label>Sub Project ID of Replacement</label>
                            </div>
                            <div class="col-md-6">
                                <input ng-model="data.replaced_sub_project_id" disabled class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-1">
                            </div>
                            <div class="col-md-5">
                                <label>Date Started (as per Original POW)</label>
                            </div>
                            <div class="col-md-6">
                                <md-datepicker disabled ng-model="dt_Date_Started"></md-datepicker>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        

    </md-dialog-content>
</div>







@section Scripts
{
    <script src="~/scripts/directives/ngAppMax.js"></script>
    <script src="~/scripts/directives/paging.js"></script>
    <script src="~/scripts/alasql.min.js"></script>
    <script src="~/scripts/xlsx.core.min.js"></script>
    <script src="~/bower_components/BlockUI/jquery.toDictionary.js"></script>
    <script src="~/bower_components/BlockUI/jquery.blockUI.js"></script>
    
    <script>

        angular.module('MyApp', ['ngMaterial', 'ngMessages', 'material.svgAssetsCache', 'app-max', 'pims-pager'])
            .controller('AppCtrl',
                function($scope, $mdDialog, $http, $mdToast) {


                    $scope.lib_project_type = {};

                    $scope._fund_source_id_options = [{ "Id": 1, "Name": "ADB" }, { "Id": 2, "Name": "WB" }];
                    $scope.mode_id_options = [{ "Id": 1, "Name": "CDD-LPP" }, { "Id": 2, "Name": "DROP" }, { "Id": 3, "Name": "Regular" }];
                    $scope.mode_id_non_ncddp_options = [{ "Id": 1, "Name": "Regular" }];



                    $scope.variation_order_options = ["Change Order", "Variation Order", "Additional Changes"];

                    $http.get('/Api/lib_project_type/')
                        .then(function(response) { $scope.project_type_id_options = response.data; });

                    $http.get('/Api/lib_physical_status/')
                        .then(function(response) { $scope.physical_status_id_options = response.data; });

                    $http.get('/api/lib_fund_source')
                        .then(function(response) {

                            $scope.fund_source_id_options = response.data;

                        });
                    $http.get('/api/online/lib_region')
                        .then(function(response) {

                            $scope.region_code_options = response.data;

                        });

                    $http.get('/api/lib_ers_current_work')
                        .then(function(response) {

                            $scope.ers_current_work_id_options = response.data;

                        });


                    $http.get('/api/lib_ers_delivery_mode')
                        .then(function(response) {

                            $scope.ers_delivery_mode_id_options = response.data;

                        });

                    $scope.selected = {};



                    // gets the template to ng-include for a table row / item
                    $scope.getTemplate = function(contact) {


                        if (contact.person_ers_work_id === $scope.selected.person_ers_work_id) return 'edit';
                        else return 'display';
                    };

                    //$scope.reset = function() {
                    //    $scope.selected = {};
                    //    $scope.new_worker_record = {};
                    //};



                    $scope.remove_worker = function (prob, index) {


                        var ask = confirm("Do you want to remove this item?");
                        if (ask == false) {
                            return false;
                        }

                        $.post('/api/delete/person_ers_work?id=' + prob.person_ers_work_id)
                            .success(function (data) {

                                $mdToast.show(
                                    $mdToast.simple()
                                    .textContent('Worker Record Removed!')
                                    .position("bottom right")
                                    .hideDelay(3000)
                                );


                                $scope.members.splice(index, 1);

                            })
                            .error(function (data) {

                                alert(JSON.stringify(data));


                                $scope.error = "An Error has occured while Saving! " + data.statusText;

                            });

                    }


                    $scope.data = {};
                    $scope.is_paired;


                    $scope.SaveCoverage = function(member) {


                        var url = '/api/subproject/post_location_coverage?brgy_code=' +
                            member.brgy_code +
                            "&id=" +
                            member.sub_project_unique_id;


                        $http.post(url)
                            .success(function(data) {


                                $mdToast.show(
                                    $mdToast.simple()
                                    .textContent('Coverage Saved!')
                                    .position("top right")
                                    .hideDelay(3000)
                                );

                            })
                            .error(function(data) {
                                $scope.error = "An Error has occured while Saving! " + data;
                                $scope.isAddingPax = false;
                            });


                    }


                    $scope.VolunteerRecords = [];


                    $http.get('/api/offline/v1/sub_project_reference/get?id=@ViewBag.id')
                        .then(function(response) {


                            $scope.loading = true;

                            $scope.data = response.data;



                            //10-19-17: check to get is_paired status:
                            $http.post('/api/offline/v1/sub_projects/check_pairing_status?sub_project_unique_id=' + $scope.data.sub_project_unique_id + "&sub_project_id=" + $scope.data.sub_project_id)
                                    .success(function (result) {
                                        $scope.pairing_result = result;

                                        if ($scope.pairing_result == true) {
                                            $scope.is_paired = true;
                                        }
                                        else {
                                            $scope.is_paired = false;
                                        }
                                    });




                            //ATTACHMENTS


              $http.get('/api/attachment_list?id=37')
              .then(function (response) {

                  $scope.attachment_list = response.data;

              });

              $scope.attached_documents = [];
              $scope.attachment = {};
              $scope.attachment.mov_list_id = null;

              $scope.sub_project_completion_report_mov_list_id = 41;
              $scope.sub_project_final_inspection_report_mov_list_id = 42;
              $scope.sub_project_cert_of_completion_mov_list_id = 43;


              $scope.uploadAttachment = function () {

                  //check first if the selected attachment type is categorized as SINGLE attachment
                  //Single attachment for Sub-project Completion Report (mov_list_id = 41)
                  //Single attachment for Final Inspection Report (mov_list_id = 42)
                  //Single attachment for Certificate of Completion and Acceptance (mov_list_id = 43)

                  //if none of these 3 attachment type has been selected, the program will proceed to the usual uploading (allows multiple attachments)
                  //function name: successful_upload()

                  if ($scope.attachment.mov_list_id == 41){
                      if ($scope.attached_documents.filter(function (e) {
                      return e.mov_list_id == 41;
                      }).length > 0) {
                          alert("Only single attachment is allowed for Sub-Project Completion Report.");
                          $scope.attachment = {};
                      }
                      else {
                          $scope.successful_upload();
                      }
                  }

                  else if ($scope.attachment.mov_list_id == 42) {
                      if ($scope.attached_documents.filter(function (e) {
                      return e.mov_list_id == 42;
                      }).length > 0) {
                          alert("Only single attachment is allowed for Final Inspection Report.");
                          $scope.attachment = {};
                      }
                      else {
                          $scope.successful_upload();
                      }
                  }

                  else if ($scope.attachment.mov_list_id == 43) {
                      if ($scope.attached_documents.filter(function (e) {
                      return e.mov_list_id == 43;
                      }).length > 0) {
                          alert("Only single attachment is allowed for Certificate of Completion and Acceptance.");
                          $scope.attachment = {};
                      }
                      else {
                          $scope.successful_upload();
                      }
                  }

                  else {
                      $scope.successful_upload();
                  }

              }

              $scope.successful_upload = function () {
                  $.blockUI({ message: '<br>Processing...<br><br>' });
                  var fileUpload = $("#files").get(0);
                  var files = fileUpload.files;
                  var data = new FormData();
                  for (var i = 0; i < files.length ; i++) {
                      data.append(files[i].name, files[i]);
                  }

                  $.ajax({
                      type: "POST",
                      url: "/Mov/UploadFilesAjax?id="
                          + '@ViewBag.id'
                          + "&mov_list_id=" + $scope.attachment.mov_list_id


                         + "&region_code=" + $scope.data.region_code
                         + "&prov_code=" + $scope.data.prov_code
                              + "&city_code=" + $scope.data.city_code
                              + "&brgy_code=" + $scope.data.brgy_code

                         + "&fund_source_id=" + $scope.data.fund_source_id
                              + "&cycle_id=" + $scope.data.cycle_id
                           + "&enrollment_id=" + $scope.data.enrollment_id,



                      contentType: false,
                      processData: false,
                      data: data,
                      success: function (message) {
                          var base = window.location.origin;

                          message.url = base + "/MOVs/" + message.attached_document_id + ".pdf";
                          $scope.attached_documents.push(message);
                          $scope.attachment = {};
                          setTimeout($.unblockUI, 3);
                          angular.element("input[type='file']").val(null);
                      },
                      error: function (message) {
                          alert(JSON.stringify(message.responseText));
                      }
                  });
              }

              $.post('/api/mov/get/uploaded?id=' + '@ViewBag.id')
                 .success(function (value) {

                     $scope.attached_documents = value;

                     angular.forEach($scope.attached_documents, function (item) {
                         var base = window.location.origin;

                         item.url = base + "/MOVs/" + item.attached_document_id + ".pdf";


                     })

                 });

              $scope.deleteMov = function (removeitem) {

                  var ask = confirm("Are you sure you want to Delete attachment? This will also be deleted on the MOVs folder.");


                  if (ask == true) {
                      $.post('/api/delete/attached_document?id=' + removeitem.attached_document_id).success(function (value) {
                          $scope.loading = false;



                          var index = $scope.attached_documents.indexOf(removeitem);
                          $scope.attached_documents.splice(index, 1);


                          alert("Record removed!")

                      }).error(function (data) {

                          alert(JSON.stringify(data));


                          $scope.error = "An Error has occured while Deleting! " + data.statusText;
                          $scope.loading = false;
                      });

                  }

                  else {
                      return false;
                  }

              }
              //END ATTACHMENTS


                            $scope.data.suspension_order_lists = [];
                            $scope.data.resume_order_lists = [];
                            $scope.data.variation_order_lists = [];
                            $scope.data.community_formation_lists = [];

                            if ($scope.data.suspension_order_list != null) {
                                $scope.data.suspension_order_lists = JSON.parse($scope.data.suspension_order_list);
                            }
                            if ($scope.data.resume_order_list != null) {
                                $scope.data.resume_order_lists = JSON.parse($scope.data.resume_order_list);
                            }
                            if ($scope.data.variation_order_list != null) {
                                $scope.data.variation_order_lists = JSON.parse($scope.data.variation_order_list);
                            }
                            if ($scope.data.community_formation_list != null) {
                                $scope.data.community_formation_lists = JSON.parse($scope.data.community_formation_list);
                            }


                            $scope.data.region_code = $scope.data.region_code == 0 ? "" : $scope.data.region_code;
                            $scope.data.prov_code = $scope.data.prov_code == 0 ? "" : $scope.data.prov_code;
                            $scope.data.city_code = $scope.data.city_code == 0 ? "" : $scope.data.city_code;
                            $scope.data.brgy_code = $scope.data.brgy_code == 0 ? "" : $scope.data.brgy_code;



                            $scope.data.modality_id = $scope.data.modality_id == 0 ? "" : $scope.data.modality_id;

                            $scope.data.cycle_id = $scope.data.cycle_id == 0 ? "" : $scope.data.cycle_id;


                            $scope.data.project_type_id = $scope.data.project_type_id == 0 ? "" : $scope.data.project_type_id;


                            $scope.$watch('data.physical_status_id', function (newValue, oldValue) {

                                if ($scope.data.physical_status_id == 3) {
                                    $scope.data.Phy_Perc_To_Date = '';

                                    $scope.data.has_t1 = false;


                                    $scope.dt_Date_Started = null;
                                    $scope.data.Date_Started = null;



                                    $scope.dt_Tranche1date = null;
                                    $scope.dt_Tranche2date = null;
                                    $scope.dt_Tranche3date = null;


                                }

                                if ($scope.data.physical_status_id != 3) {
                                    $scope.data.has_t1 = true;
                                }

                                if ($scope.data.physical_status_id == 1) {
                                    $scope.data.Phy_Perc_To_Date = 100;
                                    $scope.data.has_t1 = true;
                                }



                                if ($scope.data.physical_status_id == 2) {
                                    $scope.data.has_t1 = true;

                                    $scope.dt_Date_of_Completion = null;

                                    $scope.data.Date_of_Completion = null;

                                }





                            })




                            $scope.$watch('data.has_local_counterpart', function (newValue, oldValue) {

                                if (newValue == false) {
                                    $scope.data.LCC_Amount = '';
                                    $scope.data.LCC_Adj = '';



                                }
                            })


                            $scope.$watch('data.land_ownership_private_titled', function (newValue, oldValue) {
                                if (newValue == false) {
                                    $scope.data.land_aq_deed_of_donation = '';
                                    $scope.data.land_aq_unsfruct = '';
                                    $scope.data.land_aq_private_right_of_way_agreement = '';
                                    $scope.data.land_aq_private_permit_to_construct = '';
                                }
                            })

                            $scope.$watch('data.land_ownership_private_untitled', function (newValue, oldValue) {
                                if (newValue == false) {
                                    $scope.data.land_aq_private_quit_claim = '';
                                }
                            })

                            //lumad watch modality

                            $scope.$watch('data.modality_id', function (newValue, oldValue) {

                                if (newValue != 7) {
                                    $scope.data.is_public_school_for_ip = false;

                                    $scope.data.ncddp_grouping_id_options = [];
                                    $scope.data.modality_category_id = '';

                                    $scope.data.is_deped_funded = false;
                                    $scope.data.dep_ed_amount = '';

                                    $scope.data.erfr_project_id = '';
                                    $scope.erfr_project_id_options = [];

                                }

                                //deped school
                                if (newValue == 12) {
                                    $scope.data.project_type_id = 23;

                                }
                                //non deped
                                if (newValue != 12) {

                                    $scope.data.dep_ed_amount = '';
                                }
                                //non gig
                                if (newValue != 11) {
                                    $scope.data.training_category_id = '';
                                }
                            });


                            $scope.$watch('data.project_type_id', function (newValue, oldValue) {
                                //non school
                                if (newValue != 23) {
                                    $scope.data.is_public_school_for_ip = false;
                                }

                                //non training
                                if (newValue != 36) {
                                    $scope.data.training_category_id = '';
                                }

                                $http.get('/Api/get_project_type?id=' + newValue)
                                .then(function (response) {

                                    $scope.lib_project_type = response.data[0];


                                });
                            });




                            //if ($scope.data.suspension_order_list != null) {
                            //    $scope.data.suspension_order_lists = JSON.parse($scope.data.suspension_order_list);
                            //}







                            $scope.$watchGroup(['data.brgy_code', 'data.modality_id', 'data.cycle_id'], function (newValues, oldValues, scope) {

                                if ($scope.data.brgy_code != '' && $scope.data.modality_id == 7 && $scope.data.cycle_id != '') {


                                    $http.get('/Api/erfr_projects?brgy_code=' + $scope.data.brgy_code + "&cycle_id=" + $scope.data.cycle_id)
                                  .then(function (response) { $scope.erfr_project_id_options = response.data; });

                                }
                                else {
                                    //$scope.data.modality_category_id = '';
                                    //$scope.ncddp_grouping_id_options = [];
                                }

                            });







                            $scope.dt_date_physical_start  =  response.data.date_physical_start == undefined ? null : new Date(response.data.date_physical_start);




                            $scope.dt_date_start_physical_planned = response.data.date_start_physical_planned == undefined ? null : new Date(response.data.date_start_physical_planned);

                            $scope.dt_date_start_physical_actual= response.data.date_start_physical_actual == undefined ? null : new Date(response.data.date_start_physical_actual);

                            $scope.dt_Date_Started =  response.data.Date_Started == undefined ? null: new Date(response.data.Date_Started);

                            $scope.dt_Date_of_Completion =  response.data.Date_of_Completion == undefined ? null : new Date(response.data.Date_of_Completion);

                            $scope.dt_PlannedDate_Completion =response.data.PlannedDate_Completion == undefined ? null: new Date(response.data.PlannedDate_Completion);

                            //$scope.dt_set_date_eval = response.data.set_date_eval == undefined ? null : new Date(response.data.set_date_eval);
                            $scope.minDate = new Date("07/01/2014");
                            $scope.today = new Date();

                            $scope.dt_ncip_validated_date = response.data.ncip_validated_date == undefined ? null :new Date(response.data.ncip_validated_date);
                            $scope.dt_ncip_submitted_date =response.data.ncip_submitted_date == undefined ? null :new Date(response.data.ncip_submitted_date);

                            //$scope.data.with_tariff = $scope.data.with_tariff == null ? false : $scope.data.with_tariff;

                            $scope.maxDate = new Date($scope.dt_Date_Started);
                            $scope.min_start_date = new Date("01/01/2014");
                            $scope.ers_min_date = new Date("07/01/2014");

                            $scope.minDateErsStart = new Date($scope.new_ErsList_record.dt_date_reported);

                            $scope.$watch('new_ErsList_record.dt_date_reported',
                                function(newValue, oldValue) {
                                    $scope.minDateErsStart = new Date(newValue);
                                });


                            $scope.minSetStart = new Date($scope.dt_Date_of_Completion);


                            $scope.$watch('dt_Date_of_Completion',
                                    function(newValue, oldValue) {
                                        $scope.minSetStart = new Date(newValue);
                                    });





                            $scope.minDateErsEnd = new Date($scope.new_ErsList_record.dt_date_started);

                            $scope.$watch('new_ErsList_record.dt_date_started',
                                function(newValue, oldValue) {
                                    $scope.minDateErsEnd = new Date(newValue);
                                });

                            //$scope.today = new Date();

                            $scope.dt_Tranche1date = response.data.Tranche1date == null ? "" : new Date(response.data.Tranche1date);
                            $scope.dt_Tranche2date = response.data.Tranche2date == null ? "" : new Date(response.data.Tranche2date);
                            $scope.dt_Tranche3date = response.data.Tranche3date == null ? "" : new Date(response.data.Tranche3date);

                            $scope.$watch('dt_Date_Started',
                                function(newValue, oldValue) {
                                    $scope.maxDate = new Date(newValue);
                                });


                            $scope.$watch('data.project_type_id',
                                function(newValue, oldValue) {
                                    //non school
                                    if (newValue != 23) {
                                        $scope.data.is_public_school_for_ip = false;
                                    }

                                    //non training
                                    if (newValue != 36) {
                                        $scope.data.training_category_id = '';
                                    }


                                    $http.get('/Api/get_project_type?id=' + $scope.data.project_type_id)
                                        .then(function(response) {


                                            $scope.lib_project_type = response.data;
                                            $scope.lib_project_types = JSON.stringify(response.data);

                                        });
                                });



                            $scope.$watch('data.has_t1', function (newValue, oldValue) {

                                if (newValue == false) {
                                    $scope.data.has_t2 = false;
                                    $scope.data.Tranche1amount = '';
                                    $scope.data.Tranche1date = '';

                                    $scope.dt_Tranche1date = new Date("1970-01-01");
                                }
                            });



                            $scope.$watch('data.has_t2', function (newValue, oldValue) {

                                if (newValue == false) {
                                    $scope.data.has_t3 = false;
                                    $scope.data.Tranche2amount = '';
                                    $scope.data.Tranche2date = '';

                                    $scope.dt_Tranche2date = new Date("1970-01-01");
                                }
                            });


                            $scope.$watch('data.has_t3', function (newValue, oldValue) {

                                if (newValue == false) {

                                    $scope.data.Tranche3amount = '';
                                    $scope.data.Tranche3date = '';

                                    $scope.dt_Tranche3date = new Date("1970-01-01");
                                }
                            });





                            $scope.data.phy_construction_target = parseFloat($scope.data.s_phy_construction_target);
                            $scope.data.phy_improvement_target = parseFloat($scope.data.s_phy_improvement_target);
                            $scope.data.phy_rehabilitation_target = parseFloat($scope.data.s_phy_rehabilitation_target);
                            $scope.data.phy_purchase_target = parseFloat($scope.data.s_phy_purchase_target);

                            $scope.data
                                .phy_construction_target_secondary =
                                parseFloat($scope.data.s_phy_construction_target_secondary);
                            $scope.data
                                .phy_improvement_target_secondary =
                                parseFloat($scope.data.s_phy_improvement_target_secondary);
                            $scope.data
                                .phy_rehabilitation_targe_secondaryt =
                                parseFloat($scope.data.s_phy_rehabilitation_target_secondary);
                            $scope.data
                                .phy_purchase_target_secondary =
                                parseFloat($scope.data.s_phy_purchase_target_secondary);



                            $scope.$watch('data.physical_status_id', function(newValue, oldValue){
                                if(newValue ==1)
                                {
                                    $scope.data.Phy_Perc_To_Date = 100;


                                }
                                if(newValue ==3)
                                {

                                    $scope.data.Phy_Perc_To_Date = null;
                                }


                            })

                            $scope.$watch('data.community_training_id', function(newValue, oldValue){

                                if(newValue != null)
                                {


                                    $http.get('/api/offline/v1/trainings/get?id='+ newValue)
                                      .then(function(response) {




                                          $scope.data.pims_mibf_date = response.data.start_date;

                                          $scope.data.dt_pims_mibf_date = new Date(response.data.start_date);


                                      });
                                }

                            })

                            $scope.$watch('data.mibf_prioritization_id', function(newValue, oldValue){

                                if(newValue != null)
                                {


                                    $http.get('/Api/offline/v1/trainings/pra/selected?id='+newValue)
                                      .then(function(response) {

                                          $scope.data.pims_mibf_cost = response.data.kc_amount;
                                          $scope.data.pims_mibf_lcc_cost = response.data.lcc_amount;

                                      });
                                }

                            })


                            $scope.$watch('data.has_t1',
                                function(newValue, oldValue) {

                                    if (newValue == false) {
                                        $scope.data.has_t2 = false;
                                        $scope.data.Tranche1amount = '';
                                        $scope.data.Tranche1date = '';

                                        $scope.dt_Tranche1date = new Date("1970-01-01");
                                    }
                                });


                            $scope.$watch('data.has_t2',
                                function(newValue, oldValue) {

                                    if (newValue == false) {
                                        $scope.data.has_t3 = false;
                                        $scope.data.Tranche2amount = '';
                                        $scope.data.Tranche2date = '';

                                        $scope.dt_Tranche2date = new Date("1970-01-01");
                                    }
                                });


                            $scope.$watch('data.has_t3',
                                function(newValue, oldValue) {

                                    if (newValue == false) {

                                        $scope.data.Tranche3amount = '';
                                        $scope.data.Tranche3date = '';

                                        $scope.dt_Tranche3date = new Date("1970-01-01");
                                    }
                                });


                            $scope.$watch('data.phy_has_construction_target',
                                function(newValue, oldValue) {

                                    if (newValue == false) {

                                        $scope.data.phy_construction_target = '';
                                        $scope.data.phy_construction_actual = '';
                                    }
                                });


                            $scope.$watch('data.phy_has_improvement_target',
                                function(newValue, oldValue) {

                                    if (newValue == false) {

                                        $scope.data.phy_improvement_target = '';
                                        $scope.data.phy_improvement_actual = '';
                                    }
                                });
                            $scope.$watch('data.phy_has_rehabilitation_target',
                                function(newValue, oldValue) {

                                    if (newValue == false) {

                                        $scope.data.phy_rehabilitation_target = '';
                                        $scope.data.phy_rehabilitation_actual = '';
                                    }
                                });

                            $scope.$watch('data.phy_has_purchase_target',
                                function(newValue, oldValue) {

                                    if (newValue == false) {

                                        $scope.data.phy_purchase_target = '';
                                        $scope.data.phy_purchase_actual = '';
                                    }
                                });


                            //Secondary
                            $scope.$watch('data.phy_has_construction_target_secondary',
                                function(newValue, oldValue) {

                                    if (newValue == false) {

                                        $scope.data.phy_construction_target_secondary = '';
                                        $scope.data.phy_construction_actual_secondary = '';
                                    }
                                });


                            $scope.$watch('data.phy_has_improvement_target_secondary',
                                function(newValue, oldValue) {

                                    if (newValue == false) {

                                        $scope.data.phy_improvement_target_secondary = '';
                                        $scope.data.phy_improvement_actual_secondary = '';
                                    }
                                });
                            $scope.$watch('data.phy_has_rehabilitation_target_secondary',
                                function(newValue, oldValue) {

                                    if (newValue == false) {

                                        $scope.data.phy_rehabilitation_target_secondary = '';
                                        $scope.data.phy_rehabilitation_actual_secondary = '';
                                    }
                                });

                            $scope.$watch('data.phy_has_purchase_target_secondary',
                                function(newValue, oldValue) {

                                    if (newValue == false) {

                                        $scope.data.phy_purchase_target_secondary = '';
                                        $scope.data.phy_purchase_actual_secondary = '';
                                    }
                                });


                            $http.get('/api/subproject/get_location_coverage?id=@ViewBag.id')
                                .then(function(response) {

                                    $scope.covered_barangays = response.data;
                                });


                            $http.get('/api/offline/v1/trainings/pra/activity_matching?fund_source_id=' +
                                    $scope.data.modality_id +
                                    "&cycle_id=" +
                                    $scope.data.cycle_id +
                                    "&city_code=" +
                                    $scope.data.city_code
                                )
                                .then(function(response) {

                                    $scope.pra_activity_matching_options_id = response.data;

                                });


                            //-------------- Enhancement: 09-04-17 Add edit for ORDERS > Suspension Orders

                            angular.forEach($scope.data.suspension_order_lists,
                                                    function (todo) {
                                                        todo.date = new Date(todo.date);
                                                    });

                            $scope.addSuspension = function () {
                                $scope.suspension.date = new Date($scope.suspension.date);

                                $scope.data.suspension_order_lists.push($scope.suspension);
                                $scope.suspension = {};
                            };

                            $scope.removeSuspension = function (suspension) {
                                $scope.data.suspension_order_lists.splice(suspension, 1);
                            };

                            $scope.editSuspension = function (suspension) {
                                $scope.editing = $scope.data.suspension_order_lists.indexOf(suspension);
                                suspension.backupName = angular.copy(suspension.name);
                                suspension.backupDate = angular.copy(suspension.date);
                            };

                            $scope.saveEditedSuspension = function (suspension) {
                                delete suspension.backupName;
                                delete suspension.backupDate;
                            };

                            $scope.cancelEditSuspension = function (suspension) {
                                suspension.name = angular.copy(suspension.backupName);
                                suspension.date = angular.copy(suspension.backupDate);
                                delete suspension.backupName;
                                delete suspension.backupDate;
                            };

                            //-------------- Enhancement: 09-05-17 Add edit for ORDERS > Resume Orders

                            angular.forEach($scope.data.resume_order_lists,
                                                    function (todo) {
                                                        todo.date = new Date(todo.date);
                                                    });

                            $scope.addResume = function () {
                                $scope.resume.date = new Date($scope.resume.date);

                                $scope.data.resume_order_lists.push($scope.resume);
                                $scope.resume = {};
                            };

                            $scope.removeResume = function (resume) {
                                $scope.data.resume_order_lists.splice(resume, 1);
                            };

                            $scope.editResume = function (resume) {
                                $scope.editing = $scope.data.resume_order_lists.indexOf(resume);
                                resume.backupName = angular.copy(resume.name);
                                resume.backupDate = angular.copy(resume.date);
                            };

                            $scope.saveEditedResume = function (resume) {
                                delete resume.backupName;
                                delete resume.backupDate;
                            };

                            $scope.cancelEditResume = function (resume) {
                                resume.name = angular.copy(resume.backupName);
                                resume.date = angular.copy(resume.backupDate);
                                delete resume.backupName;
                                delete resume.backupDate;
                            };


                            //-------------- Enhancement: 09-05-17 Add edit for ORDERS > Variation Orders
                            angular.forEach($scope.data.variation_order_lists,
                                                    function (todo) {
                                                        todo.date = new Date(todo.date);
                                                    });

                            $scope.addVariation = function () {
                                $scope.variation.date = new Date($scope.variation.date);

                                $scope.data.variation_order_lists.push($scope.variation);
                                $scope.variation = {};
                            };

                            $scope.removeVariation = function (variation) {
                                $scope.data.variation_order_lists.splice(variation, 1);
                            };

                            $scope.editVariation = function (variation) {
                                $scope.editing = $scope.data.variation_order_lists.indexOf(variation);
                                variation.backupName = angular.copy(variation.name);
                                variation.backupDate = angular.copy(variation.date);
                            };

                            $scope.saveEditedVariation = function (variation) {
                                delete variation.backupName;
                                delete variation.backupDate;
                            };

                            $scope.cancelEditVariation = function (variation) {
                                variation.name = angular.copy(variation.backupName);
                                variation.date = angular.copy(variation.backupDate);
                                delete variation.backupName;
                                delete variation.backupDate;
                            };


                            //-------------- Enhancement: 09-05-17 Add edit for O&M
                            angular.forEach($scope.data.community_formation_lists,
                                                    function (todo) {
                                                        todo.date_formed = new Date(todo.date_formed);
                                                        todo.date_registered = new Date(todo.date_registered);
                                                        todo.date_consti = new Date(todo.date_consti);
                                                        todo.date_policy = new Date(todo.date_policy);
                                                        todo.date_plan = new Date(todo.date_plan);
                                                    });

                            $scope.addOpMain = function () {
                                $scope.opmain.date_formed = new Date($scope.opmain.date_formed);
                                $scope.opmain.date_registered = new Date($scope.opmain.date_registered);
                                $scope.opmain.date_consti = new Date($scope.opmain.date_consti);
                                $scope.opmain.date_policy = new Date($scope.opmain.date_policy);
                                $scope.opmain.date_plan = new Date($scope.opmain.date_plan);

                                $scope.data.community_formation_lists.push($scope.opmain);
                                $scope.opmain = {};
                            };

                            $scope.removeOpMain = function (opmain) {
                                $scope.data.community_formation_lists.splice(opmain, 1);
                            };

                            $scope.editOpMain = function (opmain) {
                                $scope.editing = $scope.data.community_formation_lists.indexOf(opmain);
                                opmain.backupName = angular.copy(opmain.name);
                                opmain.backupDateFormed = angular.copy(opmain.date_formed);
                                opmain.backupDateRegistered = angular.copy(opmain.date_registered);
                                opmain.backupRegisteredWith = angular.copy(opmain.registed_with);
                                opmain.backupDateConsti = angular.copy(opmain.date_consti);
                                opmain.backupDatePolicy = angular.copy(opmain.date_policy);
                                opmain.backupDatePlan = angular.copy(opmain.date_plan);
                                opmain.backupCapacity = angular.copy(opmain.capacity);
                            };

                            $scope.saveEditedOpMain = function (opmain) {
                                delete opmain.backupName;
                                delete opmain.backupDateFormed;
                                delete opmain.backupDateRegistered;
                                delete opmain.backupRegisteredWith;
                                delete opmain.backupDateConsti;
                                delete opmain.backupDatePolicy;
                                delete opmain.backupDatePlan;
                                delete opmain.backupCapacity;
                            };

                            $scope.cancelEditOpMain = function (opmain) {
                                opmain.name = angular.copy(opmain.backupName);
                                opmain.date_formed = angular.copy(opmain.backupDateFormed);
                                opmain.date_registered = angular.copy(opmain.backupDateRegistered);
                                opmain.registed_with = angular.copy(opmain.backupRegisteredWith);
                                opmain.date_consti = angular.copy(opmain.backupDateConsti);
                                opmain.date_policy = angular.copy(opmain.backupDatePolicy);
                                opmain.date_plan = angular.copy(opmain.backupDatePlan);
                                opmain.capacity = angular.copy(opmain.backupCapacity);
                                delete opmain.backupName;
                                delete opmain.backupDateFormed;
                                delete opmain.backupDateRegistered;
                                delete opmain.backupRegisteredWith;
                                delete opmain.backupDateConsti;
                                delete opmain.backupDatePolicy;
                                delete opmain.backupDatePlan;
                                delete opmain.backupCapacity;
                            };



                        }); //-------- end of get sub_project

                    $http.get('/api/offline/v1/sub_project/ers/get?id=' + '@ViewBag.id')
                        .then(function(response) {


                            $scope.loading = true;

                            $scope.list_ErsList = response.data;

                        });


                    //--------------------------------------- v3.0 Save SPCF entries (Financial Economic Aspect) to new table, sub_project_spcf ---------------------//
                    $scope.spcf = {};

                    //getting entries from table:
                    $http.get('/api/offline/v1/spi/spcf/get?id=' + '@ViewBag.id').then(function (response) {
                        $scope.loading = true;
                        $scope.spcf = response.data;
                    });

                    $scope.pow_total = function () {
                        return ($scope.spcf.pow_cdd_cost == undefined ? 0 : $scope.spcf.pow_cdd_cost)
                            + ($scope.spcf.pow_male_cost == undefined ? 0 : $scope.spcf.pow_male_cost)
                            + ($scope.spcf.pow_female_cost == undefined ? 0 : $scope.spcf.pow_female_cost)
                            + ($scope.spcf.pow_blgu_cost == undefined ? 0 : $scope.spcf.pow_blgu_cost)
                            + ($scope.spcf.pow_mlgu_cost == undefined ? 0 : $scope.spcf.pow_mlgu_cost)
                            + ($scope.spcf.pow_plgu_cost == undefined ? 0 : $scope.spcf.pow_plgu_cost)
                            + ($scope.spcf.pow_others_cost == undefined ? 0 : $scope.spcf.pow_others_cost);
                    }

                    $scope.women_total = function () {
                        return ($scope.spcf.women_cdd_cost == undefined ? 0 : $scope.spcf.women_cdd_cost)
                            + ($scope.spcf.women_male_cost == undefined ? 0 : $scope.spcf.women_male_cost)
                            + ($scope.spcf.women_female_cost == undefined ? 0 : $scope.spcf.women_female_cost)
                            + ($scope.spcf.women_blgu_cost == undefined ? 0 : $scope.spcf.women_blgu_cost)
                            + ($scope.spcf.women_mlgu_cost == undefined ? 0 : $scope.spcf.women_mlgu_cost)
                            + ($scope.spcf.women_plgu_cost == undefined ? 0 : $scope.spcf.women_plgu_cost)
                            + ($scope.spcf.women_others_cost == undefined ? 0 : $scope.spcf.women_others_cost);
                    }

                    $scope.training_total = function () {
                        return ($scope.spcf.training_cdd_cost == undefined ? 0 : $scope.spcf.training_cdd_cost)
                            + ($scope.spcf.training_male_cost == undefined ? 0 : $scope.spcf.training_male_cost)
                            + ($scope.spcf.training_female_cost == undefined ? 0 : $scope.spcf.training_female_cost)
                            + ($scope.spcf.training_blgu_cost == undefined ? 0 : $scope.spcf.training_blgu_cost)
                            + ($scope.spcf.training_mlgu_cost == undefined ? 0 : $scope.spcf.training_mlgu_cost)
                            + ($scope.spcf.training_plgu_cost == undefined ? 0 : $scope.spcf.training_plgu_cost)
                            + ($scope.spcf.training_others_cost == undefined ? 0 : $scope.spcf.training_others_cost);
                    }

                    $scope.management_total = function () {
                        return ($scope.spcf.management_cdd_cost == undefined ? 0 : $scope.spcf.management_cdd_cost)
                            + ($scope.spcf.management_male_cost == undefined ? 0 : $scope.spcf.management_male_cost)
                            + ($scope.spcf.management_female_cost == undefined ? 0 : $scope.spcf.management_female_cost)
                            + ($scope.spcf.management_blgu_cost == undefined ? 0 : $scope.spcf.management_blgu_cost)
                            + ($scope.spcf.management_mlgu_cost == undefined ? 0 : $scope.spcf.management_mlgu_cost)
                            + ($scope.spcf.management_plgu_cost == undefined ? 0 : $scope.spcf.management_plgu_cost)
                            + ($scope.spcf.management_others_cost == undefined ? 0 : $scope.spcf.management_others_cost);
                    }

                    $scope.others_total = function () {
                        return ($scope.spcf.others_cdd_cost == undefined ? 0 : $scope.spcf.others_cdd_cost)
                            + ($scope.spcf.others_male_cost == undefined ? 0 : $scope.spcf.others_male_cost)
                            + ($scope.spcf.others_female_cost == undefined ? 0 : $scope.spcf.others_female_cost)
                            + ($scope.spcf.others_blgu_cost == undefined ? 0 : $scope.spcf.others_blgu_cost)
                            + ($scope.spcf.others_mlgu_cost == undefined ? 0 : $scope.spcf.others_mlgu_cost)
                            + ($scope.spcf.others_plgu_cost == undefined ? 0 : $scope.spcf.others_plgu_cost)
                            + ($scope.spcf.others_others_cost == undefined ? 0 : $scope.spcf.others_others_cost);
                    }

                    $scope.pow_total_lcc = function () {
                        return ($scope.spcf.pow_male_cost == undefined ? 0 : $scope.spcf.pow_male_cost)
                            + ($scope.spcf.pow_female_cost == undefined ? 0 : $scope.spcf.pow_female_cost)
                            + ($scope.spcf.pow_blgu_cost == undefined ? 0 : $scope.spcf.pow_blgu_cost)
                            + ($scope.spcf.pow_mlgu_cost == undefined ? 0 : $scope.spcf.pow_mlgu_cost)
                            + ($scope.spcf.pow_plgu_cost == undefined ? 0 : $scope.spcf.pow_plgu_cost)
                            + ($scope.spcf.pow_others_cost == undefined ? 0 : $scope.spcf.pow_others_cost);
                    }

                    $scope.women_total_lcc = function () {
                        return ($scope.spcf.women_male_cost == undefined ? 0 : $scope.spcf.women_male_cost)
                            + ($scope.spcf.women_female_cost == undefined ? 0 : $scope.spcf.women_female_cost)
                            + ($scope.spcf.women_blgu_cost == undefined ? 0 : $scope.spcf.women_blgu_cost)
                            + ($scope.spcf.women_mlgu_cost == undefined ? 0 : $scope.spcf.women_mlgu_cost)
                            + ($scope.spcf.women_plgu_cost == undefined ? 0 : $scope.spcf.women_plgu_cost)
                            + ($scope.spcf.women_others_cost == undefined ? 0 : $scope.spcf.women_others_cost);
                    }

                    $scope.training_total_lcc = function () {
                        return ($scope.spcf.training_male_cost == undefined ? 0 : $scope.spcf.training_male_cost)
                            + ($scope.spcf.training_female_cost == undefined ? 0 : $scope.spcf.training_female_cost)
                            + ($scope.spcf.training_blgu_cost == undefined ? 0 : $scope.spcf.training_blgu_cost)
                            + ($scope.spcf.training_mlgu_cost == undefined ? 0 : $scope.spcf.training_mlgu_cost)
                            + ($scope.spcf.training_plgu_cost == undefined ? 0 : $scope.spcf.training_plgu_cost)
                            + ($scope.spcf.training_others_cost == undefined ? 0 : $scope.spcf.training_others_cost);
                    }

                    $scope.management_total_lcc = function () {
                        return ($scope.spcf.management_male_cost == undefined ? 0 : $scope.spcf.management_male_cost)
                            + ($scope.spcf.management_female_cost == undefined ? 0 : $scope.spcf.management_female_cost)
                            + ($scope.spcf.management_blgu_cost == undefined ? 0 : $scope.spcf.management_blgu_cost)
                            + ($scope.spcf.management_mlgu_cost == undefined ? 0 : $scope.spcf.management_mlgu_cost)
                            + ($scope.spcf.management_plgu_cost == undefined ? 0 : $scope.spcf.management_plgu_cost)
                            + ($scope.spcf.management_others_cost == undefined ? 0 : $scope.spcf.management_others_cost);
                    }

                    $scope.others_total_lcc = function () {
                        return ($scope.spcf.others_male_cost == undefined ? 0 : $scope.spcf.others_male_cost)
                            + ($scope.spcf.others_female_cost == undefined ? 0 : $scope.spcf.others_female_cost)
                            + ($scope.spcf.others_blgu_cost == undefined ? 0 : $scope.spcf.others_blgu_cost)
                            + ($scope.spcf.others_mlgu_cost == undefined ? 0 : $scope.spcf.others_mlgu_cost)
                            + ($scope.spcf.others_plgu_cost == undefined ? 0 : $scope.spcf.others_plgu_cost)
                            + ($scope.spcf.others_others_cost == undefined ? 0 : $scope.spcf.others_others_cost);
                    }

                    $scope.grand_total = function () {
                        return $scope.pow_total() + $scope.training_total() + $scope.women_total() + $scope.management_total() + $scope.others_total();
                    }

                    $scope.grand_total_lcc = function () {
                        return $scope.pow_total_lcc() + $scope.training_total_lcc() + $scope.women_total_lcc() + $scope.management_total_lcc() + $scope.others_total_lcc();
                    }

                    $scope.grand_total_lcc_perc = function () {
                        return (100 * $scope.grand_total_lcc() / $scope.grand_total()).toFixed(2);
                    }

                    $scope.cdd_total = function () {
                        return ($scope.spcf.pow_cdd_cost == undefined ? 0 : $scope.spcf.pow_cdd_cost)
                            + ($scope.spcf.training_cdd_cost == undefined ? 0 : $scope.spcf.training_cdd_cost)
                            + ($scope.spcf.management_cdd_cost == undefined ? 0 : $scope.spcf.management_cdd_cost)
                            + ($scope.spcf.women_cdd_cost == undefined ? 0 : $scope.spcf.women_cdd_cost)
                            + ($scope.spcf.others_cdd_cost == undefined ? 0 : $scope.spcf.others_cdd_cost)
                    }

                    $scope.cdd_perc = function () {
                        return (100 * $scope.cdd_total() / $scope.grand_total()).toFixed(2);
                    }

                    $scope.men_total = function () {
                        return ($scope.spcf.pow_male_cost == undefined ? 0 : $scope.spcf.pow_male_cost)
                            + ($scope.spcf.training_male_cost == undefined ? 0 : $scope.spcf.training_male_cost)
                            + ($scope.spcf.management_male_cost == undefined ? 0 : $scope.spcf.management_male_cost)
                            + ($scope.spcf.women_male_cost == undefined ? 0 : $scope.spcf.women_male_cost)
                            + ($scope.spcf.others_male_cost == undefined ? 0 : $scope.spcf.others_male_cost)
                    }

                    $scope.men_perc = function () {
                        return (100 * $scope.men_total() / $scope.grand_total()).toFixed(2);
                    }

                    $scope.female_total = function () {
                        return ($scope.spcf.pow_female_cost == undefined ? 0 : $scope.spcf.pow_female_cost)
                            + ($scope.spcf.training_female_cost == undefined ? 0 : $scope.spcf.training_female_cost)
                            + ($scope.spcf.management_female_cost == undefined ? 0 : $scope.spcf.management_female_cost)
                            + ($scope.spcf.women_female_cost == undefined ? 0 : $scope.spcf.women_female_cost)
                            + ($scope.spcf.others_female_cost == undefined ? 0 : $scope.spcf.others_female_cost)
                    }

                    $scope.female_perc = function () {
                        return (100 * $scope.female_total() / $scope.grand_total()).toFixed(2);
                    }

                    $scope.blgu_total = function () {
                        return ($scope.spcf.pow_blgu_cost == undefined ? 0 : $scope.spcf.pow_blgu_cost)
                            + ($scope.spcf.training_blgu_cost == undefined ? 0 : $scope.spcf.training_blgu_cost)
                            + ($scope.spcf.management_blgu_cost == undefined ? 0 : $scope.spcf.management_blgu_cost)
                            + ($scope.spcf.women_blgu_cost == undefined ? 0 : $scope.spcf.women_blgu_cost)
                            + ($scope.spcf.others_blgu_cost == undefined ? 0 : $scope.spcf.others_blgu_cost)
                    }

                    $scope.blgu_perc = function () {
                        return (100 * $scope.blgu_total() / $scope.grand_total()).toFixed(2);
                    }

                    $scope.mlgu_total = function () {
                        return ($scope.spcf.pow_mlgu_cost == undefined ? 0 : $scope.spcf.pow_mlgu_cost)
                            + ($scope.spcf.training_mlgu_cost == undefined ? 0 : $scope.spcf.training_mlgu_cost)
                            + ($scope.spcf.management_mlgu_cost == undefined ? 0 : $scope.spcf.management_mlgu_cost)
                            + ($scope.spcf.women_mlgu_cost == undefined ? 0 : $scope.spcf.women_mlgu_cost)
                            + ($scope.spcf.others_mlgu_cost == undefined ? 0 : $scope.spcf.others_mlgu_cost)
                    }

                    $scope.mlgu_perc = function () {
                        return (100 * $scope.mlgu_total() / $scope.grand_total()).toFixed(2);
                    }

                    $scope.plgu_total = function () {
                        return ($scope.spcf.pow_plgu_cost == undefined ? 0 : $scope.spcf.pow_plgu_cost)
                            + ($scope.spcf.training_plgu_cost == undefined ? 0 : $scope.spcf.training_plgu_cost)
                            + ($scope.spcf.management_plgu_cost == undefined ? 0 : $scope.spcf.management_plgu_cost)
                            + ($scope.spcf.women_plgu_cost == undefined ? 0 : $scope.spcf.women_plgu_cost)
                            + ($scope.spcf.others_plgu_cost == undefined ? 0 : $scope.spcf.others_plgu_cost)
                    }

                    $scope.plgu_perc = function () {
                        return (100 * $scope.plgu_total() / $scope.grand_total()).toFixed(2);
                    }

                    $scope.others_others_total = function () {
                        return ($scope.spcf.pow_others_cost == undefined ? 0 : $scope.spcf.pow_others_cost)
                            + ($scope.spcf.training_others_cost == undefined ? 0 : $scope.spcf.training_others_cost)
                            + ($scope.spcf.management_others_cost == undefined ? 0 : $scope.spcf.management_others_cost)
                            + ($scope.spcf.women_others_cost == undefined ? 0 : $scope.spcf.women_others_cost)
                            + ($scope.spcf.others_others_cost == undefined ? 0 : $scope.spcf.others_others_cost)
                    }

                    $scope.others_others_total_perc = function () {
                        return (100 * $scope.others_others_total() / $scope.grand_total()).toFixed(2);
                    }



                    //------------------------------- Add multiple SET for a subproject: 03-03-17 -------------------------------------------//

                    $scope.set_data = {};

                    //getting list of available sets:
                    $http.get('/api/offline/v1/sub_project/set/get?id=' + '@ViewBag.id').then(function (response) {
                        $scope.loading = true;
                        $scope.list_SET = response.data;
                    });

                    //refresh list:
                    $scope.refreshsetlist = function () {
                        $http.get('/api/offline/v1/sub_project/set/get?id=' + '@ViewBag.id').then(function (response) {
                            $scope.loading = true;
                            $scope.list_SET = response.data;
                        });
                    };

                    $scope.createNewSET = function () {
                        $scope.create_button_is_clicked = true;
                    };

                    $scope.compute_for_set_total = function () {
                        $scope.set_data.set_total_score = ($scope.set_data.set_sp_utilization * .15 == undefined ? 0 : $scope.set_data.set_sp_utilization * .15)
                                                        + ($scope.set_data.set_organization * .20 == undefined ? 0 : $scope.set_data.set_organization * .20)
                                                        + ($scope.set_data.set_institutional_linkage * .10 == undefined ? 0 : $scope.set_data.set_institutional_linkage * .10)
                                                        + ($scope.set_data.set_financial * .15 == undefined ? 0 : $scope.set_data.set_financial * .15)
                                                        + ($scope.set_data.set_physical * .40 == undefined ? 0 : $scope.set_data.set_physical * .40);

                        return $scope.set_data.set_total_score.toFixed(2);
                    };

                    //start of edit:
                    $scope.editset = function (item) {
                        $scope.edit_button_is_clicked = true;
                        $scope.create_button_is_clicked = false;

                        $http.get('/api/offline/v1/spi/set/details/get?id=' + item.sub_project_set_id).then(function (response) {
                            $scope.loading = true;
                            $scope.set_data = response.data;

                            $scope.dt_set_date_eval = response.data.set_date_eval == undefined ? null : new Date(response.data.set_date_eval);
                            $scope.set_data.set_physical_description = response.data.set_physical_description;
                            $scope.set_data.set_sp_utilization = response.data.set_sp_utilization == 0 ? "" : $scope.set_data.set_sp_utilization;
                            $scope.set_data.set_organization = response.data.set_organization == 0 ? "" : $scope.set_data.set_organization;
                            $scope.set_data.set_institutional_linkage = response.data.set_institutional_linkage == 0 ? "" : $scope.set_data.set_institutional_linkage;
                            $scope.set_data.set_physical = response.data.set_physical == 0 ? "" : $scope.set_data.set_physical;
                            $scope.set_data.set_financial = response.data.set_financial == 0 ? "" : $scope.set_data.set_financial;
                            $scope.set_data.set_total_score = response.data.set_total_score == 0 ? "" : $scope.set_data.set_total_score;

                            //save when edited:
                            $scope.saveset = function () {
                                $.post('/api/offline/v1/sub_projects/set/save', $scope.set_data).success(function (data) {
                                    $scope.loading = false;
                                    $('html, body').animate({ scrollTop: '0px' }, 1500);
                                    $mdToast.show(
                                                $mdToast.simple()
                                                .textContent('SET has been updated!')
                                                .position("top right")
                                                .hideDelay(3000)
                                            );
                                    $scope.set_data.sub_project_set_id = data.sub_project_set_id;
                                    $scope.cancelset();
                                    $scope.refreshsetlist();
                                }).error(function (data) {
                                    alert(JSON.stringify(data));
                                    $scope.error = "An Error has occured while Saving! " + data.statusText;
                                    $scope.loading = false;
                                });
                            };

                            //cancel editing:
                            $scope.cancelset = function () {
                                $scope.create_button_is_clicked = false;
                                $scope.edit_button_is_clicked = false;
                                $scope.set_data = {};
                            };

                        });

                    }; //end of edit


                    //delete set in list
                    $scope.deleteset = function (removeitem) {
                        var ask = confirm("Are you sure you want to Delete this?");

                        if (ask === true) {
                            $.post('/api/delete/sub_project/set?id=' + removeitem.sub_project_set_id).success(function (value) {
                                $scope.loading = false;
                                var index = $scope.list_SET.indexOf(removeitem);
                                $scope.list_SET.splice(index, 1);
                                $scope.cancelset();
                                alert("Record removed!");
                            }).error(function (data) {
                                alert(JSON.stringify(data));
                                $scope.error = "An Error has occured while Deleting! " + data.statusText;
                                $scope.loading = false;
                            });
                        }
                        else {
                            return false;
                        }
                    };

                    //save when newly created:
                    $scope.saveset = function () {

                        $scope.set_data.sub_project_id = $scope.data.sub_project_id;
                        $scope.set_data.sub_project_unique_id = $scope.data.sub_project_unique_id;

                        $.post('/api/offline/v1/sub_projects/set/save', $scope.set_data).success(function (data) {
                            $scope.loading = false;
                            $('html, body').animate({ scrollTop: '0px' }, 1500);
                            $mdToast.show(
                                        $mdToast.simple()
                                        .textContent('New SET has been saved!')
                                        .position("top right")
                                        .hideDelay(3000)
                                    );
                            $scope.set_data.sub_project_set_id = data.sub_project_set_id;
                            $scope.list_SET.push($scope.set_data);
                            $scope.cancelset();
                        }).error(function (data) {
                            alert(JSON.stringify(data));
                            $scope.error = "An Error has occured while Saving! " + data.statusText;
                            $scope.loading = false;
                        });
                    };

                    //cancel creating new SET:
                    $scope.cancelset = function () {
                        $scope.create_button_is_clicked = false;
                        $scope.edit_button_is_clicked = false;
                        $scope.dt_set_date_eval = '';
                        $scope.set_data = {};
                    };


                    //------------------------------- end -----------------------------------//


                    //ERS LIST


                    $scope.addNewErsList = function() {
                        $scope.new_ErsList = !$scope.new_ErsList;
                    }

                    $scope.selected_ErsList = {};
                    $scope.new_ErsList_record = {}

                    $scope.editErsList = function(contact) {
                        $scope.edit_ErsList = true;
                        $scope.selected_ErsList = angular.copy(contact);
                    };


                    // gets the template to ng-include for a table row / item
                    $scope.getErsListTemplate = function(contact) {
                        if (contact
                            .mibf_prioritization_id ===
                            $scope.selected_ErsList.mibf_prioritization_id) return 'editErsListTemplate';
                        else return 'displayErsListTemplate';
                    };

                    $scope.reset_ErsList = function() {
                        $scope.new_ErsList = false;
                        $scope.edit_ErsList = false;
                        $scope.selected_ErsList = {};
                        $scope.new_ErsList_record = {};
                    };

                    $scope.save_ErsList = function(idx) {


                        $.post('/api/offline/v1/trainings/ErsList/save', $scope.selected_ErsList)
                            .success(function(data) {


                                $mdToast.show(
                                    $mdToast.simple()
                                    .textContent('ErsList Updated!')
                                    .position("top right")
                                    .hideDelay(3000)
                                );
                            })
                            .error(function(data) {

                                $scope.error = "An Error has occured while Saving! " + data.statusText;
                                $scope.loading = false;
                            });


                        $scope.list_ErsList[idx] = angular.copy($scope.selected_ErsList);
                        $scope.reset_ErsList();
                    };


                    $scope.new_ErsList_record.community_training_id = $scope.data.community_training_id;

                    $scope.add_ErsList = function() {
                        $scope.new_ErsList_record.sub_project_id = $scope.data.sub_project_id;
                        $scope.new_ErsList_record.sub_project_unique_id = $scope.data.sub_project_unique_id;

                        $scope.new_ErsList_record.fund_source_id = $scope.data.modality_id;
                        $scope.new_ErsList_record.cycle_id = $scope.data.cycle_id;
                        $scope.new_ErsList_record.region_coe = $scope.data.region_code;
                        $scope.new_ErsList_record.prov_code = $scope.data.prov_code;
                        $scope.new_ErsList_record.city_code = $scope.data.city_code;
                        $scope.new_ErsList_record.brgy_code = $scope.data.brgy_code;


                        $scope.new_ErsList_record.created_by = 0;
                        $scope.new_ErsList_record.created_date = new Date();


                        $.post('/api/offline/v1/sub_projects/ers/save', $scope.new_ErsList_record)
                            .success(function(data) {

                                $mdToast.show(
                                    $mdToast.simple()
                                    .textContent('Ers List Added!')
                                    .position("top right")
                                    .hideDelay(3000)
                                );


                                $scope.new_ErsList_record.sub_project_ers_id = data.sub_project_ers_id;

                                $scope.list_ErsList.push($scope.new_ErsList_record);
                                $scope.reset_ErsList();
                            })
                            .error(function(data) {
                                alert(JSON.stringify(data));
                                $scope.error = "An Error has occured while Saving! " + data.statusText;
                                $scope.loading = false;
                            });


                    };

                    $scope.remove_ErsList = function(id, idx) {


                        var ask = confirm("Are you sure you want to remove this?")

                        if (ask == false) {
                            return false;
                        }

                        $.post('/api/delete/sub_project_ers?id=' + id)
                            .success(function(data) {
                                $mdToast.show(
                                    $mdToast.simple()
                                    .textContent('Ers List Removed!')
                                    .position("top right")
                                    .hideDelay(3000)
                                );
                                $scope.list_ErsList.splice(idx, 1);
                            })
                            .error(function(data) {

                                alert(JSON.stringify(data.responseText));

                                $scope.error = "An Error has occured while Saving! " + data.statusText;
                                $scope.loading = false;
                            });


                    };


                    //END ERS LIST


                    //ERS WORKERS


                    $scope.addNewWorker = function() {
                        $scope.new_worker = !$scope.new_worker;

                        if($scope.new_worker == true)
                        {
                            $scope.search();
                        }
                    }

                    $scope.new_worker_record = {};
                    //$scope.new_worker_record;
                    $scope.selected = {};

                    $scope.edit_worker = function(contact) {
                        $scope.edit_worker_ = true;
                        $scope.selected = angular.copy(contact);
                    };


                    // gets the template to ng-include for a table row / item
                    $scope.getTemplate = function(contact) {


                        if($scope.selected_ers_delivery_mode == 1)
                        {
                            if (contact.person_ers_work_id === $scope.selected.person_ers_work_id) return 'editWorker';
                            else return 'displayWorker';
                        }


                        if($scope.selected_ers_delivery_mode == 2)
                        {
                            if (contact.person_ers_work_id === $scope.selected.person_ers_work_id) return 'editPakyawWorker';
                            else return 'displayPakyawWorker';
                        }


                        if($scope.selected_ers_delivery_mode == 3)
                        {
                            if (contact.person_ers_work_id === $scope.selected.person_ers_work_id) return 'editHaulingWorker';
                            else return 'displayHaulingWorker';
                        }
                    };

                    $scope.reset = function() {
                        $scope.selected = {};
                        $scope.edit_worker_ = false;

                        $scope.new_worker_record = {};
                        $scope.new_worker_ = false;
                    };


                    $scope.hide_ers_worker = function() {
                        $scope.selected_ers_list = false;

                    }


                    $scope.equal_ers_total = function()
                    {
                        if($scope.selected_ers_delivery_mode == 1)
                        {
                            $scope.selected_total = ($scope.selected.rate_day * $scope.selected.work_days) + ($scope.selected.rate_hour * $scope.selected.work_hours);

                            $scope.selected_actual = $scope.selected.actual_cash + $scope.selected.actual_lcc;


                            if($scope.selected_total != $scope.selected_actual)
                            {
                                return false;
                            }

                            return true;


                        }

                        if($scope.selected_ers_delivery_mode == 2)
                        {
                            $scope.selected_total = ($scope.selected.rate_day * $scope.selected.percent) /100;

                            $scope.selected_actual = $scope.selected.actual_cash + $scope.selected.actual_lcc;


                            if($scope.selected_total != $scope.selected_actual)
                            {
                                return false;
                            }

                            return true;

                        }

                        if($scope.selected_ers_delivery_mode == 3)
                        {
                            $scope.selected_total = ($scope.selected.rate_hauling * $scope.selected.work_hauling);

                            $scope.selected_actual = $scope.selected.actual_cash + $scope.selected.actual_lcc;


                            if($scope.selected_total != $scope.selected_actual)
                            {
                                return false;
                            }

                            return true;

                        }

                    }

                    $scope.equal_ers_total_new = function()
                    {
                        if($scope.selected_ers_delivery_mode == 1)
                        {
                            $scope.selected_total_new = ($scope.new_worker_record.rate_day * $scope.new_worker_record.work_days) + ($scope.new_worker_record.rate_hour * $scope.new_worker_record.work_hours);

                            $scope.selected_actual_new = $scope.new_worker_record.actual_cash + $scope.new_worker_record.actual_lcc;


                            if($scope.selected_total_new != $scope.selected_actual_new)
                            {
                                return false;
                            }

                            return true;


                        }

                        if($scope.selected_ers_delivery_mode == 2)
                        {
                            $scope.selected_total_new = ($scope.new_worker_record.rate_day * $scope.new_worker_record.percent) /100;

                            $scope.selected_actual_new = $scope.new_worker_record.actual_cash + $scope.new_worker_record.actual_lcc;


                            if($scope.selected_total_new != $scope.selected_actual_new)
                            {
                                return false;
                            }

                            return true;

                        }

                        if($scope.selected_ers_delivery_mode == 3)
                        {
                            $scope.selected_total_new = ($scope.new_worker_record.rate_hauling * $scope.new_worker_record.work_hauling);

                            $scope.selected_actual_new = $scope.new_worker_record.actual_cash + $scope.new_worker_record.actual_lcc;


                            if($scope.selected_total_new != $scope.selected_actual_new)
                            {
                                return false;
                            }

                            return true;

                        }

                    }

                    $scope.show_ers_worker = function(item) {

                        $scope.selected_ers_list = true;

                        $scope.selected_ers_list_id = item.sub_project_ers_id;
                        $scope.selected_ers_delivery_mode = item.ers_delivery_mode_id;

                        $scope.get_ers_summary(item.sub_project_ers_id);


                        $http.get('/api/offline/v1/spi/ers/worker/get?id=' + item.sub_project_ers_id)
                            .then(function(value) {


                                $scope.page = value.Page;
                                $scope.pagesCount = value.TotalPages;
                                $scope.totalCount = value.TotalCount;
                                $scope.members = value.data;
                                $scope.isSearching = false;


                                $scope.show_ers_worker_list = true;
                                $scope.show_spcr_data = false;
                                $scope.show_profile_data = false;
                                $scope.show_ers_data = false;
                                $scope.show_geotagging = false;
                            });
                    };


                    $scope.filter = {};

                    $scope.filter.region_code = '';
                    $scope.filter.prov_code = '';
                    $scope.filter.city_code = '';
                    $scope.filter.brgy_code = '';
                    $scope.filter.fund_source_id = '';
                    $scope.filter.cycle_id = '';
                    $scope.filter.enrollment_id = '';
                    $scope.filter.is_male = '';
                    $scope.filter.is_ip = '';
                    $scope.filter.ip_group_id = '';
                    $scope.filter.occupation_id = '';
                    $scope.filter.is_lguofficial = '';
                    $scope.filter.lgu_position_id = '';
                    $scope.filter.education_attainment_id = '';
                    $scope.filter.civil_status_id = '';
                    $scope.filter.pageSize = '';
                    $scope.filter.currPage = '';
                    $scope.filter.push_status_id = '';
                    $scope.filter.approval_id = '';
                    $scope.filter.is_volunteer = '';
                    $scope.filter.volunteer_committee_position_id = '';
                    $scope.filter.volunteer_committee_id = '';
                    $scope.filter.is_worker = '';
                    $scope.filter.training_category_id = '';
                    $scope.filter.community_training_id = '';
                    $scope.filter.grs_intake_level_id = '';
                    $scope.filter.grs_form_id = '';
                    $scope.filter.grs_filling_mode_id = '';
                    $scope.filter.grs_complainant_position_id = '';
                    $scope.filter.grs_resolution_status_id = '';
                    $scope.filter.grs_feedback_id = '';
                    $scope.filter.grs_category_id = '';
                    $scope.filter.grs_complaint_subject_id = '';
                    $scope.filter.grs_nature_id = '';
                    $scope.filter.spi_nature_work_id = '';
                    $scope.filter.name = '';



                    $scope.get_ers_summary = function(id)
                    {

                        $http.get('/api/offline/v1/spi/ers/worker/get/summary?id=' + id)
                          .then(function(value) {

                              $scope.ers_list_summary = value.data;

                          });
                    }




                    $scope.search = function(page) {
                        // alert("birok");


                        $scope.filter.pageSize = $scope.pageSize === undefined ? '' : $scope.pageSize;
                        $scope.filter.currPage = page === undefined ? '' : page;
                        //$scope.filter.sub_project_ers_id = $scope.selected_ers_list_id;
                        //$scope.filter.is_worker = false;

                        $scope.isSearching = true;

                        $scope.isSearching = true;

                        //   alert(JSON.stringify($scope.filter));


                        $.post('/api/offline/v1/get/potential_ers_workers', $scope.filter)
                            .success(function(value) {

                                //  alert("bbbb");

                                $scope.page = value.Page;
                                $scope.pagesCount = value.TotalPages;
                                $scope.totalCount = value.TotalCount;
                                $scope.potentialmembers = value.Items;
                                $scope.isSearching = false;


                            })
                            .error(function(data) {

                                //    alert("get benes done");

                                $scope.error = "An Error has occured! " + data.statusText;
                                $scope.loading = false;
                            });


                    };

                    $scope.search();

                    $scope.clear_ers_search = function () {
                        $scope.filter.name = '';
                        $scope.filter.brgy_code = '';
                        $scope.search();
                    };


                    $scope.ConfirmParticipation = function (obj, idx) {

                        $scope.selected_person_profile_id = obj.person_profile_id;

                        $scope.new_worker_record.sub_project_ers_id = $scope.selected_ers_list_id;
                        $scope.new_worker_record.person_profile_id = $scope.selected_person_profile_id;

                        //if the selected user is already added to this ERS, ask confirmation to user:
                        $http.post('/api/offline/v1/sub_project/ers/worker_existence/get?person_id=' + $scope.new_worker_record.person_profile_id + "&ers_id=" + $scope.new_worker_record.sub_project_ers_id)
                            .success(function (result) {
                                $scope.worker_exists = result;

                                if ($scope.worker_exists == true) {
                                    var ask = confirm("This person has already been added to this ERS. Include it anyway?");

                                    if (ask == false) {
                                        $scope.search(); //to uncheck the currently selected person
                                        return false;
                                    }
                                    else {
                                        $scope.selected_worker_details = angular.copy(obj);
                                        $scope.selected_person_profile_id = obj.person_profile_id;

                                        $scope.new_worker_record.sub_project_ers_id = $scope.selected_ers_list_id;
                                        $scope.new_worker_record.person_profile_id = $scope.selected_person_profile_id;

                                        $scope.new_worker = !$scope.new_worker;
                                        $scope.new_worker_ = true;

                                        $mdToast.show($mdToast.simple()
                                                .textContent('Person Included as Worker!')
                                                .hideDelay(3000));
                                    }
                                }
                                else {
                                    //alert("Checked and verified that this person has no record in this ERS.");
                                    $scope.selected_worker_details = angular.copy(obj);
                                    $scope.selected_person_profile_id = obj.person_profile_id;

                                    $scope.new_worker_record.sub_project_ers_id = $scope.selected_ers_list_id;
                                    $scope.new_worker_record.person_profile_id = $scope.selected_person_profile_id;

                                    $scope.new_worker = !$scope.new_worker;
                                    $scope.new_worker_ = true;

                                    $mdToast.show($mdToast.simple()
                                            .textContent('Person Included as Worker!')
                                            .hideDelay(3000));
                                }
                            });
                    }


                    //----------------------------------------------------- OLD: ------------------------------------------------------------//
                    //$scope.saveNewWorker = function (idx) {

                    //    $scope.new_worker_record.sub_project_ers_id = $scope.selected_ers_list_id;

                    //    $.post('/api/offline/v1/sub_projects/ers/worker/save', $scope.new_worker_record)
                    //        .success(function (data) {

                    //            $scope.members.push(data);
                    //            $scope.get_ers_summary($scope.selected_ers_list_id);
                    //            $mdToast.show(
                    //                $mdToast.simple()
                    //                .textContent('Worker Added!')
                    //                .position("top right")
                    //                .hideDelay(3000)
                    //            );
                    //        })
                    //        .error(function (data) {

                    //            $scope.error = "An Error has occured while Saving! " + data.statusText;
                    //            $scope.loading = false;
                    //        });


                    //    $scope.reset();
                    //};

                    //add and save NEW WORKER to current ERS:
                    $scope.saveNewWorker = function () {

                        $scope.new_worker_record.sub_project_ers_id = $scope.selected_ers_list_id;

                        $.post('/api/offline/v1/sub_projects/ers/new_worker/save', $scope.new_worker_record)
                                    .success(function (data) {
                                        $scope.members.push(data);
                                        $scope.get_ers_summary($scope.selected_ers_list_id);
                                        $('html, body').animate({
                                            scrollTop: '0px'
                                        }, 1500);
                                        $mdToast.show(
                                            $mdToast.simple()
                                            .textContent('Worker Added!')
                                            .position("top right")
                                            .hideDelay(3000)
                                        );

                                    })
                                    .error(function (data) {
                                        $scope.error = "An Error has occured while Saving! " + data.statusText;
                                        $scope.loading = false;
                                    });

                        $scope.reset();

                    }; //end of saveNewWorker


                    //save EXISTING WORKER:
                    $scope.saveWorker = function (idx) {

                        $scope.selected.sub_project_ers_id = $scope.selected_ers_list_id;

                        $.post('/api/offline/v1/sub_projects/ers/edit_worker/save', $scope.selected)
                            .success(function (data) {

                                $scope.get_ers_summary($scope.selected_ers_list_id);
                                $scope.selected.ers_current_work_name = data[0].ers_current_work_name;
                                $scope.selected.is_skilled = data[0].is_skilled;
                                $scope.members[idx] = angular.copy($scope.selected);
                                $('html, body').animate({
                                    scrollTop: '0px'
                                }, 1500);
                                $mdToast.show(
                                    $mdToast.simple()
                                    .textContent('Worker Updated!')
                                    .position("top right")
                                    .hideDelay(3000)
                                );

                                $scope.reset();
                            })
                            .error(function (data) {

                                $scope.error = "An Error has occured while Saving! " + data.statusText;
                                $scope.loading = false;
                            });
                    };
                    //end saveWorker - EDIT



                    //========================================== END ERS =================================================//






                    $http.get('/api/offline/v1/subproject/get_photos?id=@ViewBag.id')
                        .then(function(response) {


                            $scope.myMarkers = [];
                            $scope.get_data = [];


                            $scope.loading = true;
                            $scope.get_data = response.data;

                            angular.forEach($scope.get_data, function(item)
                            {
                                var base = window.location.origin;

                                item.photo_url = 'http://geotagging.dswd.gov.ph/SPPhotos/thumbnails/' + $scope.data.region_code + '/' + item.UniqueName + '.jpg'
                                //sample: item.photo_url = 'http://geotagging.dswd.gov.ph/SPPhotos/thumbnails/060000000/412ed1f5-2527-458c-9db2-27f14fdfe3f6.jpg';
                                item.url = base +"/SPPhotos/" + item.UniqueName +".jpeg";


                            })
                            //angular.forEach($scope.get_data, function (item) {

                            //    var p = {
                            //        lat: item.lat,
                            //        lng: item.lng,
                            //        compileMessage: "",
                            //        draggable: false,
                            //        //   message: '<img ng-src="http://geotagging.dswd.gov.ph/SPPhotos/thumbnails/"+ item.region_code + "/"+ item.UniqueName +".jpg" class="portfolio-item" height="300" width="500">'
                            //    };

                            //    $scope.myMarkers.push(p);


                            //});


                            //$scope.data.markers = {};
                            //angular.extend($scope.data, { angularInterpolatedMessage: "Angular interpolated message!" });
                            //angular.extend($scope.data, {


                            //    markers: $scope.myMarkers

                            //});
                        });



                    $scope.$watch('data.community_training_id',
                        function(newValue, oldValue) {


                            var record = $scope;

                            if (newValue == null) {
                                record.mibf_priority_id = null;


                                record.pra_spi_matching_options_id = [];

                            } else {

                                $http({
                                    method: 'GET',
                                    url: '/api/offline/v1/trainings/pra/spi_matching?id=' + newValue,

                                })
                                    .success(function(data, status, headers, config) {

                                        $scope.pra_spi_matching_options_id = data;
                                    })
                                    .error(function(data, status, headers, config) {

                                        $scope.message = 'Unexpected Error';
                                    });
                            }

                        });


                    $scope.$watch('data.modality_id',
                        function(newValue, oldValue) {

                            var record = $scope;

                            if (newValue == null) {

                                record.cycle_id = null;

                                record.cycle_id_options = [];
                            } else {
                                $http({
                                    method: 'GET',
                                    url: '/api/lib_cycle?id=' + newValue,

                                })
                                    .success(function(data, status, headers, config) {

                                        $scope.cycle_id_options = data;
                                    })
                                    .error(function(data, status, headers, config) {

                                        $scope.message = 'Unexpected Error';
                                    });
                            }

                        });


                    //$scope.addSuspension = function () {
                    //    $scope.data.suspension_order_lists.push($scope.susp);
                    //    $scope.susp = {};
                    //}

                    //$scope.removeSuspension = function (susp, index) {
                    //    $scope.data.suspension_order_lists.splice(index, 1);
                    //}

                    $scope.cancel = function () {

                        window.location.href = "/View/SubProjects";
                    }

                    $scope.confirmSPID = function () {

                        //1. check if the SPID input exists on the Reference table
                        $http.get('/api/exists/sub_project_reference_table?id=' + $scope.data.sub_project_id).then(function (result) {
                            if (result.data == true) {

                                //2. check if the inputted SPID is already paired with other sub project
                                $http.get('/api/exists/is_sp_paired?id=' + $scope.data.sub_project_id).then(function (result2) {
                                    if (result2.data == true) {
                                        alert("Error: SPID " + $scope.data.sub_project_id + " is already paired.");
                                    }
                                    else {
                                        var ask = confirm("Confirming the SubProject ID will update all the basic information found on Geotagging WebApp. Are you sure you want to update?");
                                        if (ask == true) {
                                            $.blockUI({ message: '<br>Updating Sub Project... Please wait<br><br>' });
                                            //updating sub_project
                                            $.post('/api/offline/v1/sub_projects/update', $scope.data).success(function (data) {
                                                $scope.loading = false;
                                                alert("Sub Project has been updated, changes will be applied after the page reloads.");
                                                setTimeout($.unblockUI, 10);
                                                $scope.is_paired = true;
                                                window.location.reload();
                                            }).error(function (data) {
                                                alert("Error on updating Sub Project " + JSON.stringify(data));
                                                $scope.error = "An Error has occured while Saving! " + data.statusText;
                                                $scope.loading = false;
                                            });

                                        } else {
                                            return false;
                                        }
                                    }
                                });
                            }

                            else {
                                alert("This SPID does not exist on Reference Table");
                                $scope.data.sub_project_id = '';
                            }
                        });
                    };

                    $scope.save = function() {


                        $scope.$broadcast('show-errors-check-validity');
                        $scope.loading = true;


                        if ($scope.data.project_status_id == 2 && $scope.data.Phy_Perc_To_Date >= 100) {
                            alert("Ongoing projects cannot have 100% physical progress");
                            return false;
                        }

                        if ($scope.data.physical_status_id != 1) {
                            $scope.data.Date_of_Completion = '';

                        }
                        //   alert(JSON.stringify($scope.data.Date_Started));

                        if ($scope.data.physical_status_id == 3) {
                            $scope.data.Date_Started = '';

                            $scope.Tranche1date = '';
                            $scope.Tranche2date = '';
                            $scope.Tranche3date = '';
                        }
                        //    alert(JSON.stringify($scope.data.Date_Started));

                        //    alert(JSON.stringify($scope.data.s_phy_construction_target));

                        if ($scope.data.Date_Started == "1/1/1970") {
                            $scope.data.Date_Started = '';
                        }



                        $scope.data.suspension_order_list =  JSON.stringify($scope.data.suspension_order_lists);
                        $scope.data.resume_order_list = JSON.stringify($scope.data.resume_order_lists);
                        $scope.data.variation_order_list=  JSON.stringify($scope.data.variation_order_lists);
                        $scope.data.community_formation_list = JSON.stringify($scope.data.community_formation_lists);


                        //save SPCF:
                        $scope.spcf.sub_project_id = $scope.data.sub_project_id;
                        $scope.spcf.sub_project_unique_id = $scope.data.sub_project_unique_id;

                        $.post('/api/offline/v1/sub_projects/spcf/save', $scope.spcf).success(function (data) {
                            $scope.loading = false;

                        }).error(function (data) {
                            alert(JSON.stringify(data));
                            $scope.error = "Error saving SPCF entries! " + data.statusText;
                            $scope.loading = false;
                        });


                        $.post('/api/offline/v1/sub_projects/save', $scope.data)
                            .success(function(data) {
                                $scope.loading = false;
                                $('html, body').animate({ scrollTop: '0px' }, 1500);
                                $mdToast.show(
                                    $mdToast.simple()
                                    .textContent('Record Saved!')
                                    .position("top right")
                                    .hideDelay(3000)
                                );

                                //$scope.check_status();
                                @*if ($scope.status == false) {
                                    window.location.href = "/Entry/Trainings?id='@ViewBag.id'";
                                }*@

                            })
                            .error(function(data) {

                                alert(JSON.stringify(data));


                                $scope.error = "An Error has occured while Saving! " + data.statusText;
                                $scope.loading = false;
                            });
                    };


                    $scope.$watch('data.region_code',
                        function(newValue, oldValue) {


                            var record = $scope;

                            if (newValue == null) {
                                record.prov_code = null;
                                record.city_code = null;
                                record.brgy_code = null;


                                record.prov_code_options = [];
                                record.city_code_options = [];
                                record.brgy_code_options = [];
                            } else {

                                $http({
                                    method: 'GET',
                                    url: '/api/online/lib_province?id=' + newValue,

                                })
                                    .success(function(data, status, headers, config) {

                                        $scope.prov_code_options = data;
                                    })
                                    .error(function(data, status, headers, config) {

                                        $scope.message = 'Unexpected Error';
                                    });
                            }

                        });

                    $scope.$watch('data.prov_code',
                        function(newValue, oldValue) {

                            var record = $scope;

                            if (newValue == null) {

                                record.brgy_code = null;
                                record.city_code = null;
                                record.city_code_options = [];
                                record.brgy_code_options = [];
                            } else {
                                $http({
                                    method: 'GET',
                                    url: '/api/online/lib_city?id=' + newValue,

                                })
                                    .success(function(data, status, headers, config) {

                                        $scope.city_code_options = data;
                                    })
                                    .error(function(data, status, headers, config) {

                                        $scope.message = 'Unexpected Error';
                                    });
                            }

                        });

                    $scope.$watch('data.city_code',
                        function(newValue, oldValue) {

                            var record = $scope;

                            if (newValue == null) {

                                record.brgy_code = null;

                                record.brgy_code_options = [];
                            } else {
                                $http({
                                    method: 'GET',
                                    url: '/api/online/lib_brgy?id=' + newValue,

                                })
                                    .success(function(data, status, headers, config) {

                                        $scope.brgy_code_options = data;
                                    })
                                    .error(function(data, status, headers, config) {

                                        $scope.message = 'Unexpected Error';
                                    });
                            }

                        });


                })


        /**
        Copyright 2016 Google Inc. All Rights Reserved.
        Use of this source code is governed by an MIT-style license that can be in foundin the LICENSE file at http://material.angularjs.org/license.
        **/

</script>

}


